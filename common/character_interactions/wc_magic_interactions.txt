# Arcane
wc_magic_cast_spell_order_arcane_intellect_interaction = {
	category = interaction_category_wc_order_magic
	common_interaction = yes
	icon = order_arcane_intellect_interaction
	prompt = wc_magic_interaction_choose_caster_prompt_line

	populate_actor_list = {
		scope:actor = {
			if = {
				limit = { wc_magic_spell_order_arcane_intellect_unlocked_trigger = yes }
				add_to_list = characters
			}
			every_courtier = {
				limit = { wc_magic_spell_order_arcane_intellect_unlocked_trigger = yes }
				add_to_list = characters
			}
		}
	}

	is_shown = {
		scope:actor = {
			OR = {
				wc_magic_spell_order_arcane_intellect_unlocked_trigger = yes
				any_courtier = { wc_magic_spell_order_arcane_intellect_unlocked_trigger = yes }
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			NOT = { has_character_modifier = wc_magic_spell_order_arcane_intellect_modifier }
		}
	}

	has_valid_target_showing_failures_only = {
		scope:secondary_actor = {
			var:wc_current_mana_variable >= wc_magic_spell_order_arcane_intellect_cost_mana_value
		}
	}

	send_options_exclusive = no

	send_option = {
		flag = wc_channel_spell_flag
		localization = WC_MAGIC_CASTER_CHANNEL_OPTION
	}

	# send_option = { # commented out because of technical problems
		# is_shown = {
			# scope:secondary_actor = { always = yes } # spams error log
			# NOT = { scope:actor = scope:secondary_actor }
		# }
		# is_valid = {
			# scope:actor = { has_usable_hook = scope:secondary_actor } # spams error log
		# }
		# flag = wc_magic_caster_hook
		# localization = WC_MAGIC_CASTER_HOOK
	# }

	on_accept = {
		if = {
			limit = { always = scope:wc_channel_spell_flag }

			scope:secondary_actor = {

				custom_description = { # Tooltip for changing elemental favour
					text = wc_spell_monthly_mana_cost_effect
					value = wc_magic_spell_order_arcane_intellect_cost_mana_monthly_value

					add_to_variable_list = {
						name = wc_order_arcane_intellect_you_channel_on_variable_list
						target = scope:recipient
					}
				}
			}
			scope:recipient = {
				while = {
					count = scope:secondary_actor.wc_magic_spell_order_arcane_intellect_effect_value

					add_character_modifier = { modifier = wc_magic_spell_order_arcane_intellect_modifier }
				}
				add_to_variable_list = {
					name = wc_order_arcane_intellect_channeled_on_me_variable_list
					target = scope:secondary_actor
				}
			}
		}
		else = {
			scope:secondary_actor = {
				wc_CHANGE_mana_by_VALUE_effect = {
					CHANGE = subtract
					VALUE = wc_magic_spell_order_arcane_intellect_cost_mana_value
				}
			}
			scope:recipient = {
				while = {
					count = scope:secondary_actor.wc_magic_spell_order_arcane_intellect_effect_value

					add_character_modifier = { modifier = wc_magic_spell_order_arcane_intellect_modifier }
				}
			}
		}
	}

	auto_accept = {
		scope:actor = scope:secondary_actor
	}

	ai_accept = {
		base = wc_spell_interaction_ai_accept_base_value

		modifier = {
			add = wc_spell_interaction_ai_accept_channel_value
			scope:wc_channel_spell_flag = yes

			desc = bruh
		}

		opinion_modifier = {
			trigger = {
				NOT = { scope:actor = scope:secondary_actor }
			}

			who = scope:secondary_actor
			opinion_target = scope:actor
		}
		opinion_modifier = {
			trigger = {
				NOT = { scope:recipient = scope:secondary_actor }
			}

			who = scope:secondary_actor
			opinion_target = scope:recipient
		}

		modifier = {
			add = intimidated_reason_value
			scope:secondary_actor = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_reason_value
			scope:secondary_actor = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
	}
}

