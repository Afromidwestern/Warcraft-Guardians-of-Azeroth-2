# Implement a way in which learning more professions gets harder and harder.
learn_mining = {
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	desc = learn_mining_desc

	ai_check_interval = learn_profession_check_interval

	is_shown = {
		is_adult = yes
		NOT = { has_trait = lifestyle_mining }
	}
	is_valid_showing_failures_only = {
		is_in_an_activity = no
		is_imprisoned = no
		is_commanding_army = no
	}
	#is_valid = {
		#num_of_professions <= 2
	#}

	
	ai_will_do = { # Determine what aspects influence the ai to learn this.
		base = 1 # Base percentage of learning the profession.

		modifier = { # Modifier to be applied when condition is met.
			add = 5
			has_trait = creature_dwarf
		}
		modifier = { # Modifier to be applied when condition is met.
			add = 5
			has_trait = creature_kobold
		}
		modifier = { # Modifier to be applied when condition is met.
			add = 5
			has_trait = creature_gnome
		}
		modifier = { # Modifier to be applied when condition is met.
			add = 5
			has_trait = creature_goblin
		}
		modifier = { # Modifier to be applied when condition is met.
			add = 5
			has_faith = faith:masonry
		}

		# Add something like if num_of_known_professions > profession_soft_cap then ai_will_do - {num_of_known_professions - profession_soft_cap} or maybe divide by 50% if that is the case.
		# So that the AI wont just learn new professions and the forget them when they are close to the soft cap but still allowing some characters to have more.
	}

	cost = {
		gold = learn_profession_gold_cost
	}

    effect = {
		add_trait = lifestyle_mining

		# When should this decision give stress?
		stress_impact = {
			lazy = medium_stress_impact_gain
		}

		# Check if this works as intended
		if = {
			limit = {
				NOT = { has_variable = wc_num_of_profession }
			}
			set_variable = {
				name = wc_num_of_profession
				value = 1
			}
		}
		else = {
			change_variable = {
				name = wc_num_of_profession
				add = 1
			}
		}
	}	
}
