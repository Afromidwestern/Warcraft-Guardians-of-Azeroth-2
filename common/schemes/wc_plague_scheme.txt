#plague scheme
plague = {
	skill = intrigue
	hostile = yes
	
	allow = {
		is_imprisoned = no
		is_ruler = yes
		
		has_trait = lich_king
		
		scope:target = {
			is_ruler = yes
		}
	}
	
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		
		#Have I been blocked from targeting this character?
		custom_description = { #Permanent
			text = plague_scheme_blocked
			subject = scope:target

			NOT = {
				scope:target = {
					has_character_flag = block_plague_scheme
				}
			}
		}
		scope:target = {
			exists = location
		}
	}

	valid_agent = {
		age >= age_14_value
	}
	
	agent_join_chance = {
		base = 0
		
		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}
		
		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = 10
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}
		
		#Target will never scheme against themselves
		modifier = {
			add = -1000
			this = scope:target
			desc = COMPASSIONATE_REASON #SCHEME_NOT_AGAINST_SELF
		}
		
		#Target is not diplomatically available
		modifier = {
			add = -1000
			is_diplomatically_available = no
			desc = SCHEME_NOT_DIPLOMATICALLY_AVAILABLE
		}
		
		# Cowardice
		modifier = {
			trigger = {
				ai_boldness < 0
			}
			add = {
				value = ai_boldness
			}
			desc = SCHEME_I_AM_A_COWARD
		}

		#How much does Agent like Owner?
		opinion_modifier = {
			trigger = {
				NOT = { this = scope:owner }
			}
			who = this
			opinion_target = scope:owner
			multiplier = 0.25
			#step = 5
			desc = SCHEME_MY_OPINION_OF_YOU
		}
	}
	
	agent_success_chance = {
		base = 0
		
		#hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
		first_valid = {
			modifier = {
				add = 25
				scope:target = {
					is_ruler = yes
				}
				has_council_position = councillor_spymaster
				scope:target.cp:councillor_spymaster = this
				desc = "SCHEME_AGENT_IS_SPYMASTER_IN_MY_COURT"
			}
			modifier = {
				add = 25
				scope:target = {
					is_ruler = no
				}
				has_council_position = councillor_spymaster
				exists = scope:target.liege.cp:councillor_spymaster
				scope:target.liege.cp:councillor_spymaster = this
				desc = "SCHEME_AGENT_IS_SPYMASTER"
			}
			modifier = {
				add = 25
				save_temporary_scope_as = physician
				scope:target = { has_relation_court_physician = scope:physician }
				desc = "SCHEME_AGENT_IS_COURT_PHYSICIAN"
			}
			modifier = {
				add = 25
				is_councillor_of = scope:target
				NOT = { has_council_position = councillor_spymaster }
				desc = "SCHEME_AGENT_IS_COUNCILLOR"
			}
			modifier = {
				add = 25
				is_powerful_vassal_of = scope:target
				desc = "SCHEME_AGENT_IS_POWERFUL_VASSAL"
			}
			modifier = {
				add = 15
				scope:target = {
					is_ruler = yes
				}
				is_ruler = yes
				desc = "SCHEME_AGENT_IS_VASSAL"
			}
			modifier = {
				add = 5
				is_courtier_of = scope:target
				desc = "SCHEME_AGENT_IS_COURTIER"
			}
			modifier = {
				add = 5
				is_foreign_court_or_pool_guest_of = scope:target
				desc =  "SCHEME_AGENT_IS_GUEST"
			}
			modifier = {
				add = 2 #FALLBACK
				desc = "SCHEME_AGENT_IS_FELLOW_COURTIER"
			}
		}
		first_valid = {	
			modifier = {
				add = 15
				has_relation_nemesis = scope:target
				desc = "SCHEME_AGENT_IS_NEMESIS"
			}
			modifier = {
				add = 10
				has_relation_rival = scope:target
				desc = "SCHEME_AGENT_IS_RIVAL"
			}
		}

		# Skill modifiers
		modifier = {
			add = {
				value = intrigue
				multiply = 0.5
			}
			desc = "SCHEME_AGENT_SUCCESS_INTRIGUE"
		}

		modifier = {
			add = {
				value = learning
				multiply = 0.25
			}
			desc = "SCHEME_AGENT_SUCCESS_LEARNING"
		}

		modifier = {
			add = {
				value = diplomacy
				multiply = 0.125
			}
			desc = "SCHEME_AGENT_SUCCESS_DIPLOMACY"
		}

		modifier = {
			add = {
				value = martial
				multiply = 0.125
			}
			desc = "SCHEME_AGENT_SUCCESS_MARTIAL"
		}

		# Lifestyle modifiers
		modifier = {
			add = 10
			has_trait = lifestyle_herbalist
			desc = SCHEME_AGENT_SUCCESS_HERBALIST
		}

		modifier = {
			add = 10
			has_trait = lifestyle_mystic
			desc = SCHEME_AGENT_SUCCESS_MYSTIC
		}

		modifier = {
			add = 10
			has_trait = lifestyle_physician
			desc = SCHEME_AGENT_SUCCESS_PHYSICIAN
		}

		# Trait modifiers
		modifier = {
			add = 10
			has_trait = whole_of_body
			desc = SCHEME_AGENT_SUCCESS_WHOLE_OF_BODY
		}

		modifier = {
			add = 10
			has_trait = torturer
			desc = SCHEME_AGENT_SUCCESS_TORTURER
		}

		modifier = {
			add = 10
			has_trait = scholar
			desc = SCHEME_AGENT_SUCCESS_SCHOLAR
		}

		modifier = {
			add = 10
			has_trait = witch
			desc = SCHEME_AGENT_SUCCESS_WITCH
		}
	}
	
	#agent_join_threshold = 5
	agent_leave_threshold = -50
		
	cooldown = { years = 5 }
	is_secret = yes
	base_secrecy = 15

	on_ready = {
		scheme_owner = {
			# trigger_event = murder_outcome.0001
			trigger_event = plague_outcome.0001
		}
	}

	on_invalidated = {
		if = {
			limit = {
				scope:owner = {
					is_ruler = no
				}
			}
			#TODO throw event
		}
		else_if = {
			limit = {
				NOT = {
					faith = faith:death_god
				}
			}
			#TODO throw event
		}
		else_if = {
			limit = {
				NOT = {
					primary_title.tier = tier_empire
				}
			}
			#TODO throw event
		}
	}

	on_agent_join = {
		#TODO here you can throw an event of a cultist, or, if needed, save them in a list so later you can give them the religion stuff
	}

	on_agent_leave = {
		#TODO random event of agent being like "they are plaguing and it's this guy", very low
	}

	on_monthly = {
		plague_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					#on_action = murder_ongoing
					on_action = plague_ongoing
				}
			}
		}
	}
	
	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.0
	power_per_agent_skill_point = 2

	spymaster_power_per_skill_point = 1
	spymaster_resistance_per_skill_point = 1
	
	minimum_progress_chance = 5
	maximum_progress_chance = 100
	
	minimum_secrecy = 0
	maximum_secrecy = 95

	minimum_success = 0
	maximum_success = 95

	# tier_resistance = 1
	
	success_desc = "PLAGUE_SUCCESS_DESC"
	discovery_desc = "PLAGUE_DISCOVERY_DESC"
}