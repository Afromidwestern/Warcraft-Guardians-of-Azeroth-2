stasis_trap_scheme = {
	skill = intrigue
	hostile = yes

	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.75
	power_per_agent_skill_point = 1
	
	minimum_progress_chance = 10
	maximum_progress_chance = 90
	minimum_success = 5
	maximum_secrecy = 85
	maximum_success = 85
	
	allow = {
		has_perk = stasis_trap # Scheme unlocked by the Stasis Trap
		
		is_adult = yes
		is_landed = yes
		is_imprisoned = no
		is_in_stun_trigger = no
	}
	
	valid = {
		is_landed = yes
		OR = {
			NOT = { is_parent_of = scope:target }
			has_trait_with_flag = can_murder_own_children
		}
		scope:target = {
			is_in_stun_trigger = no
			exists = location
			in_diplomatic_range = scope:owner 
		}
		# Special AI exceptions
		NOT = {
			scope:owner = {
				is_ai = yes
				has_opinion_modifier = {
					target = scope:target
					modifier = repentant_opinion
				}
			}
		}
	}

	valid_agent = {
		age >= 14
	}
	
	agent_join_chance = {
		base = 0
		
		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = bribe_acceptance_value
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}
	
	base_success_chance = {
		base = 0
		
		hostile_scheme_base_chance_modifier = yes
		
		# Spiritual Head of Faith
		modifier = {
			add = -50
			desc = "SCHEME_VS_SPIRITUAL_HOF"
			scope:target = {
				faith = scope:owner.faith
				faith = {
					has_doctrine = doctrine_spiritual_head
				}
				faith = {
					exists = religious_head
					religious_head = {
			 			this = scope:target
			 		}
				}
			}
		}
		
		# Various penalties
		first_valid = {
			modifier = { # Foreign Rulers are very hard to stun
				add = -75
				desc = "sway_foreign_target"
				scope:target = {
					is_ruler = yes
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Foreign subjects less so
				add = -40
				desc = "sway_foreign_target"
				scope:target = {
					is_foreign_court_or_pool_guest = no
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Rulers are harder to stun
				add = -50
				desc = "FABRICATE_HOOK_RULER_TARGET"
				scope:target = {
					is_ruler = yes
					scope:target.top_liege = scope:owner.top_liege
				}
			}
		}
		
		# At War
		first_valid = {
			modifier = {
				add = -200
				desc = "SCHEME_AT_WAR"
				scope:target = {
					is_at_war_with = scope:owner
				}
			}
			modifier = {
				add = -150
				scope:target = {
					is_landed = no
					exists = liege
					liege = {
						is_at_war_with = scope:owner
					}
				}
				desc = "SCHEME_AT_WAR_WITH_LIEGE"
			}
			modifier = {
				add = -100
				scope:target = {
					is_landed = yes
					exists = liege
					liege = {
						is_at_war_with = scope:owner
					}
				}
				desc = "SCHEME_AT_WAR_WITH_LIEGE"
			}
		}
	}
	
	agent_success_chance = {
		base = 0
		
		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}
	
	agent_leave_threshold = -25
		
	cooldown = { years = 10 }
	is_secret = yes
	base_secrecy = 10

	on_ready = { #HERE
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_stasis_trap_outcome_0001
				}
				trigger_event = {
					id = stasis_trap_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = stasis_trap_outcome.0001
			}
		}
	}

	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			scheme_owner = {
				trigger_event = {
					on_action = stasis_trap_ongoing 
					days = { 1 30 }
				}
			}
		}
	}

	
	on_invalidated = {
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					has_character_modifier = stasis_trap_stunned
					#imprisoner = scope:owner
				}
				scope:owner = {
					NOT = { has_character_flag = is_in_event_stasis_trap_outcome_0001 } #You probably stasis trapped them
				}
			}
			scope:owner = {
				send_interface_message = {
					title = stasis_trap_scheme_invalidated_title
					type = stasis_trap_invalidated_i_stunned_message
					desc = stasis_trap_scheme_i_imprisoned_them_message
					left_icon = scope:target
				}
			}
		}
		else_if = { #Stunned
			limit = {
				scope:target = { has_character_modifier = stasis_trap_stunned }
			}
			scope:owner = { 
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = stasis_trap_scheme_already_stunned_message
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
	
	success_desc = "STASIS_TRAP_SUCCESS_DESC"
	discovery_desc = "STASIS_TRAP_DISCOVERY_DESC"
}
