# Historical Artifacts Creation #

set_artifact_rarity_common = {
	save_scope_value_as = {
		name = quality
		value = 15
	}
	save_scope_value_as = {
		name = wealth
		value = 15
	}
}

set_artifact_rarity_masterwork = {
	save_scope_value_as = {
		name = quality
		value = 30
	}
	save_scope_value_as = {
		name = wealth
		value = 30
	}
}

set_artifact_rarity_famed = {
	save_scope_value_as = {
		name = quality
		value = 70
	}
	save_scope_value_as = {
		name = wealth
		value = 70
	}
}

set_artifact_rarity_illustrious = {
	save_scope_value_as = {
		name = quality
		value = 100
	}
	save_scope_value_as = {
		name = wealth
		value = 100
	}
}

create_artifact_pedestal_christian_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:nail
			}
		}
		10 = {
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:thorn
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_sandals
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:sandals
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_girdle
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:girdle
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						count > 5
						has_variable = christian_skull
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:skull
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						count > 5
						has_variable = christian_arm
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:arm
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_loincloth
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:loincloth
			}
		}
		10 = {
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:cross
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_spear
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:spear
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_crown
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:crown
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_veil
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:veronica
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:christian_relic_name
			OR = {
				scope:christian_relic_name = flag:sandals
				scope:christian_relic_name = flag:girdle
				scope:christian_relic_name = flag:loincloth
				scope:christian_relic_name = flag:spear
				scope:christian_relic_name = flag:crown
				scope:christian_relic_name = flag:veronica
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = pedestal_christian_relic
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:christian_relic_name
			scope:christian_relic_name = flag:skull
		}
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = human_skull
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = reliquary
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:christian
		}
		if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:veronica
			}
			set_variable = christian_veil
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:crown
			}
			set_variable = christian_crown
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:loincloth
			}
			set_variable = christian_loincloth
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:spear
			}
			set_variable = christian_spear
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:arm
			}
			set_variable = christian_arm
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:sandals
			}
			set_variable = christian_sandals
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:girdle
			}
			set_variable = christian_girdle
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:skull
			}
			set_variable = christian_skull
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_islamic_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:hair
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_cloak
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:cloak
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_hand
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:hand
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_keys
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:keys
			}
		}
		10 = {
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:tooth
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_seal
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:seal
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_banner
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:banner
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:islam_relic_name
			scope:islam_relic_name = flag:banner
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_banner_islam_name
			description = artifact_banner_islam_description
			type = wall_big
			template = islam_artifact_template
			visuals = banner_islam
			visuals_source = title:d_shiite #Caliphate
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:islam_relic_name
			OR = {
				scope:islam_relic_name = flag:cloak
				scope:islam_relic_name = flag:hand
				scope:islam_relic_name = flag:keys
				scope:islam_relic_name = flag:seal
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_islam_name
			description = artifact_pedestal_reliquary_islam_description
			type = pedestal
			template = islam_artifact_template
			visuals = pedestal_islamic_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}	
	else = {
		create_artifact = {	
			name = artifact_pedestal_reliquary_islam_name
			description = artifact_pedestal_reliquary_islam_description
			type = pedestal
			template = islam_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:islamic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:cloak
			}
			set_variable = islam_cloak
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:seal
			}
			set_variable = islam_seal
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:keys
			}
			set_variable = islam_keys
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:hand
			}
			set_variable = islam_hand
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:banner
			}
			set_variable = islam_banner
		}
		add_scaled_artifact_modifier_devotion_effect = yes
		save_scope_as = epic
	}
}

create_artifact_pedestal_buddhism_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:tooth
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bone
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_robe
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:robe
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_bowl
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bowl
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_tongue
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:tongue
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:hair
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:sarira
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bo
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:buddhism_relic_name
			OR = {
				scope:buddhism_relic_name = flag:robe
				scope:buddhism_relic_name = flag:bowl
				scope:buddhism_relic_name = flag:tongue
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = buddhism_artifact_template
			visuals = pedestal_buddhism_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:buddhism_relic_name
			scope:buddhism_relic_name = flag:tooth
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = buddhism_artifact_template
			visuals = buddha_tooth
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = buddhism_artifact_template
			visuals = pedestal_buddhism_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:buddhism
		}
		if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:tongue
			}
			set_variable = buddhism_tongue
		}
		else_if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:bowl
			}
			set_variable = buddhism_bowl
		}
		else_if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:robe
			}
			set_variable = buddhism_robe
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_zoroastr_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:haoma
			}
		}
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:cypress
			}
		}
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		visuals = pedestal_branch_relic_zoroastr
		wealth = scope:wealth
		quality = scope:quality
		template = branch_zoroastr_template
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:zoroastr
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_germanic_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:thor
			}
		}
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:uppsala
			}
		}
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_germanic_template
		visuals = pedestal_branch_relic_germanic
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:germanic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_slavic_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:alatyr
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_slavic_template
		visuals = pedestal_branch_relic_slavic
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:slavic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_boog_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:somb
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_boog_template
		visuals = pedestal_branch_relic_boog
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:boog
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_hinduism_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:kalpavriksha
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_hinduism_template
		visuals = pedestal_branch_relic_hinduism
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:hinduism
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_general_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:general
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_general_template
		visuals = pedestal_branch_relic_hinduism
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = {	#This is needed to determine what religion the branch will work for.
			name = relic_religion
			value = $RELIGION$
		}
		set_variable = { name = historical_unique_artifact value = yes }
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

#Common Artifacts

create_artifact_excalibur_effect = {
	# Warcraft
}

create_artifact_edmund_head_effect = {
	# Warcraft
}

create_artifact_makarakundala_effect = {
	# Warcraft
}

#Masterwork Artifacts

create_artifact_ibeji_effect = {
	# Warcraft
}

create_artifact_chinese_caligraphy_effect = {
	# Warcraft
}

create_artifact_throne_charlemagne_effect = { #Create at start
	# Warcraft
}

create_artifact_throne_solomon_effect = {
	# Warcraft
}

create_artifact_throne_scone_effect = {
	# Warcraft
}

create_artifact_wall_banner_kaviani_effect = {
	# Warcraft
}

create_artifact_sculpture_cabinet_pentapyrgion_effect = {
	# Warcraft
}

create_artifact_monomachus_crown_effect = {
	# Warcraft
}

create_artifact_ruyi_effect = {
	# Warcraft
}

create_artifact_jewelled_danda_effect = {
	# Warcraft
}

create_artifact_khanda_effect = {
	# Warcraft
}

create_artifact_dagger_of_rostam_effect = {
	# Warcraft
}

create_artifact_ascalon_effect = {
	# Warcraft
}

create_artifact_zomorrodnegar_effect = {
	# Warcraft
}

create_artifact_kaves_apron_effect = {
	# Warcraft
}

create_artifact_muhammads_epistles_effect = {
	# Warcraft
}

create_artifact_aruval_effect = {
	# Warcraft
}

create_artifact_navaratna_effect = {
	# Warcraft
}

create_artifact_pedestal_ikenga_effect = {
	# Warcraft
}

create_artifact_afarganyu_effect = {
	# Warcraft
}

create_artifact_siddhachakra_effect = {
	# Warcraft
}

create_artifact_staff_kakusandha_effect = {
	# Warcraft
}

create_artifact_konagamana_effect = {
	# Warcraft
}

create_artifact_robe_kassapa_effect = {
	# Warcraft
}

#Famed Artifacts

create_artifact_reichskrone_effect = {
	# Warcraft
}

create_artifact_cintamani_hindu_effect = {
	# Warcraft
}

create_artifact_cintamani_buddhist_effect = {
	# Warcraft
}

create_artifact_wall_banner_edessa_effect = {
	# Warcraft
}

create_artifact_wall_cid_sword_effect = {
	# Warcraft
}

create_artifact_wall_muhammad_sword_effect = {
	# Warcraft
}

create_artifact_sword_mmaagha_kamalu_effect = {
	# Warcraft
}

create_artifact_bronze_head_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_bronze_head_name
		description = artifact_bronze_head_description
		type = pedestal
		visuals = head
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = bronze_head_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = bronze_head
		save_scope_as = epic
	}
}

create_artifact_crystal_carving_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_crystal_carving_name
		description = artifact_crystal_carving_description
		type = pedestal
		visuals = riches
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = crystal_carving_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crystal_carving
		save_scope_as = epic
	}
}

create_artifact_wall_sword_attila_effect = {
	# Warcraft
}

create_artifact_pedestal_great_diamond_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_great_diamond_name
		description = artifact_pedestal_great_diamond_description
		type = pedestal
		template = general_unique_template
		visuals = diamond
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = great_diamond_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = great_diamond
		save_scope_as = epic
	}
}

create_artifact_pedestal_al_jabal_effect = {
	# Warcraft
}

create_artifact_pedestal_al_yatima_effect = {
	# Warcraft
}

create_artifact_pedestal_cup_jamshid_effect = {
	# Warcraft
}

create_artifact_pedestal_crown_iron_effect = { #Create at start
	# Warcraft
}

create_artifact_nikephoros_crown_effect = {
	# Warcraft
}

create_artifact_pedestal_shankha_conch_effect = {
	# Warcraft
}

create_artifact_skull_cap_charlemagne_effect = {
	# Warcraft
}

create_artifact_essen_crown_effect = {
	# Warcraft
}

create_artifact_dhammapada_effect = {
	# Warcraft
}

create_artifact_vinaya_pitaka_effect = {
	# Warcraft
}

create_artifact_sutta_pitaka_effect = {
	# Warcraft
}

create_artifact_abhidhamma_pitaka_effect = {
	# Warcraft
}

create_artifact_qadib_al_mulk_effect = {
	# Warcraft
}

create_artifact_al_dawat_effect = {
	# Warcraft
}

create_artifact_al_hafir_effect = {
	# Warcraft
}

create_artifact_al_sayf_al_khass_effect = {
	# Warcraft
}

create_artifact_durendal_effect = {
	# Warcraft
}

create_artifact_nagelring_effect = {
	# Warcraft
}

create_artifact_szczerbiec_effect = {
	# Warcraft
}

create_artifact_kladenets_effect = {
	# Warcraft
}

create_artifact_legbiter_effect = {
	# Warcraft
}

create_artifact_quernbiter_effect = {
	# Warcraft
}

create_artifact_dragvandil_effect = {
	# Warcraft
}

create_artifact_curtana_effect = {
	# Warcraft
}

create_colada_effect = {
	# Warcraft
}

create_artifact_angelicas_ring_effect = {
	# Warcraft
}

create_artifact_olifant_effect = {
	# Warcraft
}

create_artifact_aram_effect = {
	# Warcraft
}

create_artifact_sledovik_effect = {
	# Warcraft
}

create_artifact_kantele_effect = {
	# Warcraft
}

#Illustrious Artifacts

create_artifact_pedestal_david_harp_effect = {
	# Warcraft
}

create_artifact_joyeuse_effect = {
	# Warcraft
}

create_artifact_papal_tiara_effect = {
	# Warcraft
}

create_artifact_sculpture_ark_of_covenant_effect = {
	# Warcraft
}

create_artifact_pedestal_koh_i_noor_effect = {
	# Warcraft
}

create_artifact_al_taj_crown_effect = {
	# Warcraft
}

create_artifact_wall_banner_thankfulness_effect = {
	# Warcraft
}

create_artifact_arms_of_alexander_effect = {
	# Warcraft
}

create_artifact_turquoise_throne_effect = {
	# Warcraft
}

create_artifact_peacock_throne_effect = {
	# Warcraft
}

create_artifact_spear_of_the_prophet_effect = {
	# Warcraft
}

create_artifact_mantle_of_the_prophet_effect = {
	# Warcraft
}

create_artifact_sculpture_babr_e_bayan_effect = {
	# Warcraft
}

create_artifact_pedestal_justinian_effect = {
	# Warcraft
}
