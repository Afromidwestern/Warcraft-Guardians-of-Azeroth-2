learn_spell_effect = {
	if = {
		limit = {
			is_unknown_spell_trigger = {
				SPELL_NAME = $SPELL_NAME$
			}
		}
		add_to_variable_list = {
			name = known_spells
			target = $SPELL_NAME$
		}
		add_to_variable_list = {
			name = known_rank_1_spells
			target = $SPELL_NAME$
		}
	}
}

learn_spell_rank_effect = {
	add_to_variable_list = {
		name = known_rank_$RANK$_spells
		target = $SPELL_NAME$
	}
}

change_elemental_favour_effect = {
	if = {
		limit = {
			has_variable = wc_elemental_$TYPE$_favour_variable
		} 
		# nothing
	}
	else = {
		set_variable = {
			name = wc_elemental_$TYPE$_favour_variable
			value = wc_elemental_$TYPE$_favour_current_value
		}
	}
	change_variable = {
		name = wc_elemental_$TYPE$_favour_variable
		$CHANGE$ = $VALUE$
	}
	# TODO : recalculate traits
}

cast_spell_effect = { # Works for tooltips? 
	add_to_variable_list = { # FOR GUI
		name = current_spells_casting
		target = var:current_spell_name
	}
	switch = { # For non elementals, put type as none
		trigger = var:current_spell_name
		flag:summon_fire_elemental = { start_spell_casting_effect = { SPELL = summon_fire_elemental TYPE = fire RANK = var:current_spell_rank } }
	}
}

remove_spell_coolown = {
	remove_variable = flag:$SPELL$_remaining_cd
}

start_spell_casting_effect = {
	wc_change_mana_by_value_effect = { # Remove mana
		CHANGE = subtract
		VALUE = wc_spell_$SPELL$_cost_mana_value
	}

	# Save Variables so when the event triggers they wont be lost
	set_variable = {
		name = $SPELL$_rank
		value = $RANK$
	}

	if = {
		limit = {
			exists = scope:spell_recipient
		}
		set_variable = { 
			name = $SPELL$_recipient
			value = scope:spell_recipient
		}
	}

	else_if = {
		limit = {
			has_variable_list = spell_targets_list
		}
		every_in_list = {
			variable = spell_targets_list
			save_scope_as = new_target
			add_to_variable_list = {
				name = $SPELL$_targets_list
				target = scope:new_target
			}
		}
	}

	while = {
		count = wc_spell_$SPELL$_cast_time_value
		# do nothing
	}

	# this actually casts the spell after cast time is up 
	spell_execute = { EFFECT = cast_$SPELL$_effect }

	# Remove it from GUI
	remove_list_variable = {
		name = current_spells_casting
		target = flag:$SPELL$
	}

	#put the spell on cooldown
	add_character_flag = {
		flag = flag:$SPELL$_cd
		days = wc_spell_$SPELL$_cooldown_value
	}

	if = {
		limit = { # Change elemental disposition
			spell_is_elemental_trigger = { SPELL_NAME = flag:$SPELL$ }
			exists = var:elemental_type
		}
		set_variable = {
			name = elemental_favour_change
			value = {
				add = wc_spell_$SPELL$_cost_mana_value
				multiply = 0.4
			}
		}
		if = {
			limit = {
				var:elemental_type = flag:spirit
			}
			change_elemental_favour_effect = {
				TYPE = $TYPE$
				CHANGE = add
				VALUE = var:elemental_favour_change
			}
		}
		else_if = {
			limit = {
				var:elemental_type = flag:decay
			}
			change_elemental_favour_effect = {
				TYPE = $TYPE$
				CHANGE = subtract
				VALUE = var:elemental_favour_change
			}
		}
		remove_variable = elemental_favour_change
	}
	remove_variable = flag:$SPELL$_remaining_cd
	remove_variable = $SPELL$_rank
	remove_variable = $SPELL$_recipient
	clear_variable_list = $SPELL$_targets_list
}

spell_execute = {
	$EFFECT$ = yes
}