
#RHYNO

# spawn_army = {
# 	levies = 50
# 	# men_at_arms = {
# 	# 	type = varangian_veterans
# 	# 	stacks = 1
# 	# }
# 	location = $PLAGUER$.capital_province 
# 	inheritable = yes
# 	uses_supply = yes
# 	name = plague_troops
# 	#save_scope_as = new_army
# }

plague_barony = {
	$PLAGUER$ = {
		if = {
			limit = {
				$PLACE$.title_province.building_levies > 50
			}
			spawn_army = {
				levies = $PLACE$.title_province.building_levies
				location = $PLAGUER$.capital_province 
				inheritable = yes
				uses_supply = yes
				name = plague_troops
			}
		}
		else = {
			spawn_army = {
				levies = 50
				location = $PLAGUER$.capital_province 
				inheritable = yes
				uses_supply = yes
				name = plague_troops
			}
		}
	}
	$PLACE$ = {
		change_development_level = 0
		title_province = {
			add_province_modifier = {
				modifier = plague_province_modifier
				years = 50
			}
		}

		county = {
			if = {
				limit = {
					NOT = {
						any_county_province = {
							NOT = { has_province_modifier = plague_province_modifier}
						}
					}
				}
				
				set_county_culture = $PLAGUER$.culture
				set_county_faith = $PLAGUER$.faith
				# change_county_control = -1
			}
		}
	}
}

plague_consequences_known_or_exposed_effect = {
	$PLAGUER$ = {
		# ###ADD TRAITS###
		# #Force tooltip is used for everyone but POV to make sure expose secret events looks right for everyone, even though the trait can only be added once. Kinslayer works the same way.
		# add_trait_only_force_tooltip_if_not_pov_effect = { TRAIT = murderer POV = $POV$ }
		# add_kinslayer_trait_or_nothing_effect = { VICTIM = $VICTIM$ }
		
		# if = { #Add piety penalty if the murder was unjust
		# 	limit = {
		# 		NOR = {
		# 			any_close_family_member = {
		# 				even_if_dead = yes
		# 				exists = killer
		# 				killer = $VICTIM$
		# 			}
		# 			any_spouse = {
		# 				even_if_dead = yes
		# 				exists = killer
		# 				killer = $VICTIM$
		# 			}
		# 		}
		# 	}
		# 	add_piety = medium_piety_loss
		# }

		# ###OPINION AND DREAD###
		# #Hide this from POV if they're not the murderer
		# if = {
		# 	limit = { this = $POV$ }
		# 	add_dread = 15
		# 	murder_opinion_effect = { VICTIM = $VICTIM$ MURDERER = $MURDERER$ }
		# }
		# else = {
		# 	hidden_effect = {
		# 		add_dread = 15
		# 		murder_opinion_effect = { VICTIM = $VICTIM$ MURDERER = $MURDERER$ }
		# 	}
		# }
		# # There are some things you just shouldn't do
		# show_as_tooltip = {
		# 	if = {
		# 		limit = { $VICTIM$ = { has_character_flag = is_party_baron } }
		# 		add_character_modifier = {
		# 			modifier = party_baron_murdered_the_joy_of_life_modifier
		# 		}
		# 	}
		# }
		# hidden_effect = {
		# 	if = {
		# 		limit = {
		# 			OR = {
		# 				exists = local_var:murdered_party_baron
		# 				exists = scope:secret.var:murdered_party_baron
		# 			}
		# 		}
		# 		add_character_modifier = {
		# 			modifier = party_baron_murdered_the_joy_of_life_modifier
		# 		}
		# 	}
		# }
	}
	$VICTIM$ = {

	}
	$POV$ = {

	}
}

unknown_plague_sacrifice_effect = {
	# Party Baron handling
	# if = {
	# 	limit = { $VICTIM$ = { has_character_flag = is_party_baron } }
	# 	set_local_variable = {
	# 		name = murdered_party_baron
	# 		value = yes
	# 	}
	# }
	$SACRIFICE$ = {
		#Killed by murder: set this up first to keep the killer hidden.
		death = {
			killer = $PLAGUER$
			death_reason = death_duel
		}
	}
	#TODO
	$PLAGUER$ = {
	# 	if = {
	# 		limit = { is_alive = yes }
	# 		hidden_effect = {
	# 			# add_secret = {
	# 			# 	type = secret_plague_sacrifice
	# 			# 	target = $SACRIFICE$
	# 			# }
	# 			add_secret = {
	# 				type = secret_murder
	# 				target = $SACRIFICE$
	# 			}
	# 		}
	# 		# if = {
	# 		# 	limit = { exists = local_var:murdered_party_baron }
	# 		# 	random_secret = {
	# 		# 		limit = {
	# 		# 			secret_type = secret_murder
	# 		# 			secret_target = $VICTIM$
	# 		# 		}
	# 		# 		set_variable = {
	# 		# 			name = murdered_party_baron
	# 		# 			value = yes
	# 		# 		}
	# 		# 	}
	# 		# }
	# 	}
	}
}

unknown_plague_effect = {
	$VICTIM$ = {
		# death = {
		# 	killer = $PLAGUER$
		# 	death_reason = death_mysterious
		# }
	}

	$PLAGUER$ = {
		save_scope_as = plaguer
	}

	plague_barony = {
		PLACE = $PLACE$
		PLAGUER = $PLAGUER$
	}

	$PLACE$ = {
		save_scope_as = plagued_barony	
	}

	trigger_event = {
		on_action = spread_plague_barony
		months = 6
	}
	
	# $PLACE$ = {
	# 	add_county_modifier = {
	# 		modifier = plague_county_modifier
	# 		years = 10
	# 	}
	# 	change_development_level = 0
	# 	set_county_culture = $PLAGUER$.culture
	# 	set_county_faith = $PLAGUER$.faith
	# }

	

	#TODO
	# $PLAGUER$ = {
	# 	if = {
	# 		limit = { is_alive = yes }
	# 		hidden_effect = {
	# 			add_secret = {
	# 				type = secret_plague
	# 				target = $VICTIM$
	# 			}
	# 		}
	# 	}
	# }
	show_as_tooltip = {
		plague_consequences_known_or_exposed_effect = {
			PLAGUER = $PLAGUER$
			VICTIM = $VICTIM$
			POV = root
		}
	}



	# Party Baron handling
	# if = {
	# 	limit = { $VICTIM$ = { has_character_flag = is_party_baron } }
	# 	set_local_variable = {
	# 		name = murdered_party_baron
	# 		value = yes
	# 	}
	# }
	# $VICTIM$ = {
	# 	#Killed by murder: set this up first to keep the killer hidden.
	# 	death = {
	# 		killer = $PLAGUER$
	# 		death_reason = $REASON$
	# 	}
	# }
	# $PLAGUER$ = {
		# if = {
		# 	limit = { is_alive = yes }
		# 	hidden_effect = {
		# 		add_secret = {
		# 			type = secret_murder
		# 			target = $VICTIM$
		# 		}
		# 	}
		# 	if = {
		# 		limit = { exists = local_var:murdered_party_baron }
		# 		random_secret = {
		# 			limit = {
		# 				secret_type = secret_murder
		# 				secret_target = $VICTIM$
		# 			}
		# 			set_variable = {
		# 				name = murdered_party_baron
		# 				value = yes
		# 			}
		# 		}
		# 	}
		# }
	# }
}

# #If it's a cannibal eating you - so that that fact is saved for future reference
# unknown_cannibal_murder_effect = {
# 	$VICTIM$ = {
# 		death = {
# 			death_reason = death_mysterious
# 			killer = $MURDERER$
# 		}
# 	}
# 	$MURDERER$ = {
# 		add_secret = {
# 			type = secret_murder
# 			target = $VICTIM$
# 		}
# 		random_secret = {
# 			limit = {
# 				secret_type = secret_murder
# 				secret_target = $VICTIM$
# 			}
# 			set_variable = { #To set the right death reason if the secret is revealed
# 				name = was_eaten_by_cannibal
# 				value = yes
# 			}
# 		}
# 	}
# }


#KNOWN MURDER

# Exposer can be another character, or the murderer themselves if no specific character makes sense
known_plague_sacrifice_effect = {
	# hidden_effect = {
	# 	if = {
	# 		limit = { $SACRIFICE$ = { has_character_flag = is_party_baron } }
	# 		set_local_variable = {
	# 			name = murdered_party_baron
	# 			value = yes
	# 		}
	# 	}
	# }
	$SACRIFICE$ = {
		death = {
			death_reason = death_plague_sacrifice
			killer = $PLAGUER$
		}
		hidden_effect = { set_killer_public = yes }
	}
	# TODO
 	$PLAGUER$ = {
	# 	hidden_effect = {
	# 		# add_secret = {
	# 		# 	type = secret_plague_sacrifice
	# 		# 	target = $SACRIFICE$
	# 		# }
	# 		add_secret = {
	# 			type = secret_murder
	# 			target = $SACRIFICE$
	# 		}
	# 		random_secret = {
	# 			# limit = {
	# 			# 	secret_type = secret_plague_sacrifice
	# 			# 	secret_target = $SACRIFICE$
	# 			# }
	# 			limit = {
	# 				secret_type = secret_murder
	# 				secret_target = $SACRIFICE$
	# 			}

	# 			set_variable = {
	# 				name = known_plaguer
	# 				value = yes
	# 			}

	# 			expose_secret = $EXPOSER$
	# 		}
	# 	}
	}
	$EXPOSER$ = {

	}
	show_as_tooltip = {
		plague_consequences_known_or_exposed_effect = {
			PLAGUER = $PLAGUER$
			VICTIM = $SACRIFICE$
			POV = root
		}
	}
}

known_plague_effect = {
	hidden_effect = {

	}
	$VICTIM$ = {

	}
	$PLAGUER$ = {
		save_scope_as = plaguer
	}

	plague_barony = {
		PLACE = $PLACE$
		PLAGUER = $PLAGUER$
	}

	$PLACE$ = {
		save_scope_as = plagued_barony

		trigger_event = {
			on_action = spread_plague_barony
			months = 6
		}
	}
	
	$EXPOSER$ = {
		
	}
	# hidden_effect = {
	# 	if = {
	# 		limit = { $SACRIFICE$ = { has_character_flag = is_party_baron } }
	# 		set_local_variable = {
	# 			name = murdered_party_baron
	# 			value = yes
	# 		}
	# 	}
	# }
	# $VICTIM$ = {
	# 	death = {
	# 		death_reason = death_plague_sacrifice
	# 		killer = $PLAGUER$
	# 	}
	# 	hidden_effect = { set_killer_public = yes }
	# }

	#TODO
	# $PLAGUER$ = {
	# 	hidden_effect = {
	# 		add_secret = {
	# 			type = secret_plague
	# 			target = $VICTIM$
	# 		}
	# 		random_secret = {
	# 			limit = {
	# 				secret_type = secret_plague
	# 				secret_target = $VICTIM$
	# 			}

	# 			set_variable = {
	# 				name = known_plaguer
	# 				value = yes
	# 			}

	# 			expose_secret = $EXPOSER$
	# 		}
	# 	}
	# }
	show_as_tooltip = {
		plague_consequences_known_or_exposed_effect = {
			PLAGUER = $PLAGUER$
			VICTIM = $VICTIM$
			POV = root
		}
	}
}


# murder_opinion_effect = {
# 	$VICTIM$ = {
# 		#Victim's family
# 		every_spouse = {
# 			limit = { NOT = { this = $MURDERER$ } }
# 			add_to_temporary_list = close_family_murder_opinion_list
# 		}
# 		every_close_family_member = {
# 			limit = { NOT = { this = $MURDERER$ } }
# 			add_to_temporary_list = close_family_murder_opinion_list
# 		}

# 		if = {
# 			limit = {
# 				any_in_list = {
# 					list = close_family_murder_opinion_list
# 					always = yes
# 				}
# 			}
# 			every_in_list = {
# 				list = close_family_murder_opinion_list
# 				custom = all_close_family_and_spouses

# 				add_opinion = {
# 					target = $MURDERER$
# 					modifier = murdered_close_family_crime
# 				}
# 			}
# 		}
# 		#Victim's friends and lovers
# 		every_relation = {
# 			type = friend
# 			limit = {
# 				NOR = {
# 					this = $VICTIM$
# 					is_in_list = close_family_murder_opinion_list
# 				}
# 			}
# 			add_to_list = victim_close_relations_list
# 		}
# 		every_relation = {
# 			type = lover
# 			limit = {
# 				NOR = {
# 					this = $VICTIM$
# 					is_in_list = close_family_murder_opinion_list
# 					is_in_list = victim_close_relations_list
# 				}
# 			}
# 			add_to_list = victim_close_relations_list
# 		}
# 		if = {
# 			limit = {
# 				any_in_list = {
# 					list = victim_close_relations_list
# 					always = yes
# 				}
# 			}
# 			every_in_list = {
# 				list = victim_close_relations_list
# 				custom = all_friends_and_lovers
# 				add_opinion = {
# 					target = $MURDERER$
# 					modifier = executed_close_relation_opinion
# 				}
# 			}
# 		}
# 	}
# }


attempted_plague_opinion_effect = {
	$VICTIM$ = {
		if = {
			limit = { is_alive = yes }
			add_opinion = {
				target = $PLAGUER$
				modifier = attempted_plague_me_crime
			}
			hidden_effect = {
				add_opinion = {
					target = $PLAGUER$
					modifier = plague_personal_grudge_opinion
					years = 2
				}
			}
		}

		every_spouse = {
			limit = { NOT = { this = $PLAGUER$ } }
			add_to_temporary_list = close_family_plague_opinion_list
		}
		every_close_family_member = {
			limit = { NOT = { this = $PLAGUER$ } }
			add_to_temporary_list = close_family_plague_opinion_list
		}

		if = {
			limit = {
				any_in_list = {
					list = close_family_plague_opinion_list
					always = yes
				}
			}
			every_in_list = {
				list = close_family_plague_opinion_list
				custom = all_close_family_and_spouses

				add_opinion = {
					target = $PLAGUER$
					modifier = attempted_murder_close_family_crime
					years = 20
				}
			}
		}

	}
}





# #Pick a Local Creepy Crawly
# set_local_venomous_creature_effect = {
# 	random_list = {
# 		100 = {
# 			save_scope_value_as = {
# 				name = venomous_creature
# 				value = flag:rare_spider #Anywehere, but rely on high stewardship representing trade
# 			}
# 			modifier = {
# 				factor = 50
# 				stewardship <= medium_skill_rating
# 			}
# 		}
# 		500 = {
# 			save_scope_value_as = {
# 				name = venomous_creature
# 				value = flag:red_scorpion #India, Nepal
# 			}
# 			modifier = {
# 				factor = 0
# 				# Warcraft
# 				NOT = { location = { red_scorpion_region_trigger = yes } }
# 			}
# 		}
		
# 		# Warcraft
# 		1000 = {
# 			save_scope_value_as = {
# 				name = venomous_creature
# 				value = flag:viper #Northern and Eastern Europe
# 			}
# 			modifier = {
# 				factor = 0
# 				# Warcraft
# 				NOT = { location = { viper_region_trigger = yes } }
# 			}
# 		}
		
# 		# Warcraft
# 	}
# }