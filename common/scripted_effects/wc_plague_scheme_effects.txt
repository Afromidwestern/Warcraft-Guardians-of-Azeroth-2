#Scripted effects relating to Murder Schemes

#####################################################################
# EFFECT LIST
#####################################################################
# !!! Remember to add all new effects with a short description here !!!

#murder_outcome_roll_effect
#murder_success_effect
#murder_failure_effect

######################################################################
# EFFECTS
######################################################################

# plague_outcome_roll_effect: checks if the plague is succesful and discovered, then calls on the save or fail roll.
plague_outcome_roll_effect = {
	#SUCCESS ROLL
	hostile_scheme_success_roll_effect = { TOOLTIP = plague_successful_roll_tt }
	### End Success roll
	#DISCOVERY ROLL
	hostile_scheme_discovery_roll_effect = yes
	### End Discovery roll
	
	stress_impact = {
		arbitrary = minor_stress_impact_loss
		compassionate = medium_stress_impact_gain
		gregarious = minor_stress_impact_gain
	}

	hidden_effect = {
		#FIRE CORRECT ON ACTIONS
		if = {
			limit = {
				exists = scope:scheme_successful
			}
			trigger_event = {
				on_action = plague_succeeded
				days = 3
			}
		}
		else = {
			trigger_event = {
				on_action = plague_failed
				days = 3
			}
		}
	}
}


# plague_success_effect: calls a trigger for the plagued player and also deals with stress modifiers on the plaguer
# depending on personality and relationship with plagued player
plague_success_effect = {
	scope:target = {
		show_as_tooltip = {
			add_character_modifier = { modifier = watchful_modifier days = watchful_modifier_duration }
		}
	}
	scope:scheme.scheme_target = {
		trigger_event = plague_outcome.5001
	}

	show_as_tooltip = {
		plague_success_turn_undead_effect = yes
	}
	if = {
		limit = { exists = scope:scheme_discovered }
		hostile_scheme_type_opinion_effect = {
			VICTIM = scope:target
			ATTACKER = scope:owner
			SCHEME_TYPE = plague
		}
	}
	#Stress reduction
	if = {
		limit = {
			scope:scheme.scheme_owner = {
				has_trait = sadistic
			}
		}
		scope:scheme.scheme_owner = {
			stress_impact = {
				sadistic = major_stress_impact_loss
			}
		}
	}
	scope:scheme = {
		end_scheme = yes
	}
}

# plague_success_turn_undead_effect: triggers plague effects depending on if it is discovered or not
plague_success_turn_undead_effect = {
	if = {
		limit = {
			exists = scope:scheme_discovered
		}
		known_plague_effect = {
			VICTIM = scope:target
			PLACE = scope:scheme.var:plagued_barony 
			PLAGUER = scope:owner
			EXPOSER = scope:murder_exposer
		}
	}
	else = {
		if = {
			limit = { this = scope:owner }
			show_as_tooltip = {
				unknown_plague_effect = {
					VICTIM = scope:target
					PLACE = scope:scheme.var:plagued_barony 
					PLAGUER = scope:owner
				}
			}
		}
		else_if = {
			limit = { this = scope:target }
			custom_tooltip = plague_unknown_plague_against_you_was_successful
			hidden_effect = {
				unknown_plague_effect = {
					VICTIM = scope:target
					PLACE = scope:scheme.var:plagued_barony 
					PLAGUER = scope:owner
				}
			}
		}
	}
}

# plague_failure_effect: deals with secrets, opinion upon discovery...
plague_failure_effect = {
	scope:target = {
		show_as_tooltip = {
			add_character_modifier = { modifier = watchful_modifier days = watchful_modifier_duration }
		}
	}
	if = {
		limit = {
			exists = scope:scheme_discovered
		}
		scope:owner = {
			save_scope_as = owner_to_reveal
			add_dread = minor_dread_gain
		}
		hostile_scheme_type_opinion_effect = {
			VICTIM = scope:target
			ATTACKER = scope:owner
			SCHEME_TYPE = plague
		}
		scope:target = {
			trigger_event = plague_outcome.5002
		}
	}
	#Add a murder attempt secret
	else = {
		scope:owner = {
			add_secret = {
				type = secret_plague_attempt
				target = scope:target
			}
		}
		scope:target = {
			trigger_event = plague_outcome.5002
		}
	}
}

# successful_plague_outcome_event_option_effect: resolves dread and stress effects on plague success
successful_plague_outcome_event_option_effect = {
	if = { # Dread for successfully murdering someone and getting discovered
		limit = {
			exists = scope:scheme_discovered
		}
		dread_from_discovered_murder_effect = yes
	}

	if = {
		limit = {
			faith = {
				has_doctrine_parameter = piety_gain_from_successful_intrigue_schemes
			}	
		}
		add_piety = minor_piety_gain
	}
}