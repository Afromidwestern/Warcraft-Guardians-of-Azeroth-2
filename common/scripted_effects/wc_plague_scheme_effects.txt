# plague_outcome_roll_effect: checks if the plague is succesful and discovered, then calls on the save or fail roll.
plague_outcome_roll_effect = {
	#SUCCESS ROLL
	hostile_scheme_success_roll_effect = { TOOLTIP = plague_successful_roll_tt }
	### End Success roll
	#DISCOVERY ROLL
	hostile_scheme_discovery_roll_effect = yes
	### End Discovery roll
	
	stress_impact = {
		arbitrary = minor_stress_impact_loss
		compassionate = medium_stress_impact_gain
		gregarious = minor_stress_impact_gain
	}

	hidden_effect = {
		#FIRE CORRECT ON ACTIONS
		if = {
			limit = {
				exists = scope:scheme_successful
			}
			trigger_event = {
				on_action = plague_succeeded
				days = 3
			}
		}
		else = {
			trigger_event = {
				on_action = plague_failed
				days = 3
			}
		}
	}
}

# plague_success_immediate_effect: calls a trigger for the plagued player and also deals with stress modifiers on the plaguer
# depending on personality and relationship with plagued player
plague_success_immediate_effect = {
	scope:target = {
		show_as_tooltip = { plague_success_victim_immediate_effect = yes }
	}

	#Stress reduction
	if = {
		limit = {
			scope:scheme.scheme_owner = {
				has_trait = sadistic
			}
		}
		scope:scheme.scheme_owner = {
			stress_impact = {
				sadistic = major_stress_impact_loss
			}
		}
	}
	
	scope:scheme.scheme_target = {
		trigger_event = plague_outcome.5001
	}
	
	scope:scheme = {
		end_scheme = yes
	}
}
plague_success_option_effect = {
	if = {
		limit = {
			faith = {
				has_doctrine_parameter = piety_gain_from_successful_intrigue_schemes
			}	
		}
		add_piety = minor_piety_gain
	}
}
plague_success_victim_immediate_effect = {
	add_character_modifier = { modifier = watchful_modifier days = watchful_modifier_duration }
	if = {
		limit = {
			exists = scope:scheme_discovered
		}
		known_plague_effect = {
			VICTIM = scope:target
			PLACE = scope:scheme.var:plagued_barony 
			PLAGUER = scope:owner
			EXPOSER = scope:exposer
		}
	}
	else = {
		if = {
			limit = { this = scope:owner }
			show_as_tooltip = {
				unknown_plague_effect = {
					VICTIM = scope:target
					PLACE = scope:scheme.var:plagued_barony 
					PLAGUER = scope:owner
				}
			}
		}
		else_if = {
			limit = { this = scope:target }
			custom_tooltip = plague_unknown_plague_against_you_was_successful
			hidden_effect = {
				unknown_plague_effect = {
					VICTIM = scope:target
					PLACE = scope:scheme.var:plagued_barony 
					PLAGUER = scope:owner
				}
			}
		}
	}
}

# plague_failure_immediate_effect: deals with secrets, opinion upon discovery...
plague_failure_immediate_effect = {
	scope:target = {
		show_as_tooltip = { plague_failure_victim_immediate_effect = yes }
	}
	if = {
		limit = { exists = scope:scheme_discovered }
		scope:owner = { save_scope_as = owner_to_reveal }
	}
	#Add a Plague attempt secret
	else = {
		# scope:owner = {
			# add_secret = {
				# type = secret_plague_attempt
				# target = scope:target
			# }
		# }
	}
	
	scope:target = {
		trigger_event = plague_outcome.5002
	}
}
plague_failure_victim_immediate_effect = {
	add_character_modifier = { modifier = watchful_modifier days = watchful_modifier_duration }
	if = {
		limit = { exists = scope:scheme_discovered }
		plague_consequences_known_or_exposed_effect = {
			PLAGUER = scope:owner
			VICTIM = scope:target
			POV = root
		}
	}
}

recruit_cultists_critical_success_effect = {
	send_interface_toast = {
		title = plague_ongoing.3302.a.critical_success.title
		left_icon = scope:owner
		scope:scheme = {
			add_scheme_progress = scheme_progress_gain
			add_scheme_modifier = {
				type = plague_recruit_cultists_critical_success_modifier
				days = 365
			}
		}
	}
}
recruit_cultists_success_effect = {
	send_interface_toast = {
		title = plague_ongoing.3302.a.success.title
		left_icon = scope:owner
		scope:scheme = {
			add_scheme_progress = scheme_progress_gain
			add_scheme_modifier = {
				type = plague_recruit_cultists_success_modifier
				days = 365
			}
		}
	}
}
recruit_cultists_failure_effect = {
	send_interface_toast = {
		title = plague_ongoing.3302.a.failure.title
		left_icon = scope:owner
		scope:scheme = {
			add_scheme_modifier = {
				type = plague_recruit_cultists_failure_modifier
				days = 365
			}
		}
	}
}
recruit_cultists_critical_failure_effect = {
	send_interface_toast = {
		title = plague_ongoing.3302.a.critical_failure.title
		left_icon = scope:owner
		scope:scheme = {
			if = {
				limit = { is_scheme_exposed = no }
				expose_scheme = yes
			}
		}
	}
}