add_union_creation_cooldown_base_effect = { # Start - Flags for new unions here enough
	switch = {
		trigger = scope:this_union.var:this_union
		flag:alliance = { add_union_creation_cooldown_effect = { faction = alliance } }
		flag:horde = { add_union_creation_cooldown_effect = { faction = horde } }
		flag:custom = { add_union_creation_cooldown_effect = { faction = custom } }
	}
}
# END - Flags for new unions here enough




union_members_on_game_start_effect = {
	#Alliance
	if = {
		limit = { game_start_date = 603.1.1 }
		title:e_lordaeron.holder = { become_leader_of_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_stormwind.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_kul_tiras.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_dalaran.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_gnomeregan.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_ironforge.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_wildhammer.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
	}
	else_if = {
		limit = { game_start_date = 605.6.6 }
		title:d_lordamere.holder = { become_leader_of_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_stormwind.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_kul_tiras.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_gnomeregan.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_ironforge.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:k_wildhammer.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:d_dalaran.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
		title:d_theramore.holder = { join_this_union_flag_effect = { faction = alliance give_modifiers = no } }
	}

	#Horde
	if = {
		limit = { game_start_date = 603.1.1 }
		title:k_durotan.holder = { become_leader_of_union_flag_effect = { faction = horde give_modifiers = no } }
		title:k_frostwolf_clan.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
		title:d_darkspear.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
	}
	else_if = {
		limit = { game_start_date = 605.6.6 }
		title:k_durotan.holder = { become_leader_of_union_flag_effect = { faction = horde give_modifiers = no } }
		title:k_frostwolf_clan.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
		title:d_darkspear.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
		title:d_stonemaul.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
		title:k_mulgore.holder = { join_this_union_flag_effect = { faction = horde give_modifiers = no } }
	}
}
# Joining effects
create_union_effect = {
	create_story = {
		type = union_story_cycle
		save_temporary_scope_as = this_union
	}
	add_to_global_variable_list = {
		name = all_unions
		target = scope:this_union
	}
	if = {
		limit = { flag:$faction$ = flag:custom }
		set_global_variable = { name = custom_leader value = this }
	}
	scope:this_union ?= { set_variable = { name = this_union value = flag:$faction$ } }
}
become_leader_of_union_effect = {
	if = {
		limit = {
			exists = var:this_union
			any_in_global_list = {
				variable = all_unions
				var:this_union = prev.var:this_union
			}
		}
		random_in_global_list = {
			variable = all_unions
			limit = {
				var:this_union = prev.var:this_union
			}
			save_temporary_scope_as = this_union
		}
		if = {
			limit = {
				NOT = { has_variable = this_union }
			}
			join_this_union_scope_effect = { UNION = this_union give_modifiers = yes }
		}
		scope:this_union = { make_story_owner = prev }
	}
	
	if = {
		limit = { exists = scope:this_union }
		add_alliances_with_union_effect = yes
		
		if = {
			limit = { always = $give_modifiers$ }
			add_character_modifier = faction_leader_modifier
			if = {
				limit = { NOT = { has_character_modifier = union_member_modifier } }
				add_character_modifier = union_member_modifier
			}
		}
	}
}
become_leader_of_union_flag_effect = {
	save_temporary_scope_as = joining_guy
	if = {
		limit = {
			any_in_global_list = {
				variable = all_unions
				var:this_union = flag:$faction$
			}
		}
		random_in_global_list = {
			variable = all_unions
			limit = {
				var:this_union = flag:$faction$
			}
			save_temporary_scope_as = this_union
		}
		if = {
			limit = {
				NOT = { has_variable = this_union }
			}
			join_this_union_scope_effect = { UNION = this_union give_modifiers = yes }
		}
		scope:this_union = { make_story_owner = prev }
		add_alliances_with_union_effect = yes
	}
	else = {
		create_union_effect = { faction = $faction$ }
	}
	
	set_variable = { name = this_union value = flag:$faction$ }
	
	if = {
		limit = { always = $give_modifiers$ }
		add_character_modifier = faction_leader_modifier
		if = {
			limit = { NOT = { has_character_modifier = union_member_modifier } }
			add_character_modifier = union_member_modifier
		}
	}
}
join_this_union_flag_effect = {
	random_in_global_list = {
		variable = all_unions
		limit = {
			var:this_union = flag:$faction$
		}
		save_scope_as = this_union
	}
	custom_description = {
		text = join_union_tooltip
	}
	scope:this_union = {
		add_to_variable_list = {
			name = union_members
			target = prev
		}
	}
	
	set_variable = { name = this_union value = flag:$faction$ }
	add_alliances_with_union_effect = yes
	
	if = {
		limit = { always = $give_modifiers$ }
		if = {
			limit = { NOT = { has_character_modifier = union_member_modifier } }
			add_character_modifier = union_member_modifier
		}
	}
}
join_this_union_scope_effect = {
	custom_description = {
		text = join_union_tooltip
	}
	scope:$UNION$ = {
		add_to_variable_list = {
			name = union_members
			target = prev
		}
	}
	
	set_variable = { name = this_union value = scope:$UNION$.var:this_union }
	add_alliances_with_union_effect = yes
	
	if = {
		limit = { always = $give_modifiers$ }
		if = {
			limit = { NOT = { has_character_modifier = union_member_modifier } }
			add_character_modifier = union_member_modifier
		}
	}
}

### Leaving effects
leave_or_break_this_union_effect = {
	if = {
		limit = {
			has_variable = this_union
		}
		random_in_global_list = {
			variable = all_unions
			limit = {
				var:this_union = prev.var:this_union
			}
			save_temporary_scope_as = this_union
		}
		set_variable = { name = former_union value = var:this_union days = 365 }
		leave_this_union_effect = yes
		if = {
			limit = { this = scope:this_union.story_owner }
			try_to_break_this_union_effect = yes
		}
	}
}
leave_this_union_effect = {
	custom_description = {
		text = leave_union_tooltip
		
		if = {
			limit = { NOT = { exists = scope:this_union } }
			random_in_global_list = {
				variable = all_unions
				limit = {
					var:this_union = prev.var:this_union
				}
				save_temporary_scope_as = this_union
			}
		}
		save_temporary_scope_as = leaving_person
		
		scope:this_union = { remove_list_variable = { name = union_members target = prev } }
		
		# Opinion
		if = {
			limit = { is_alive = yes }
			scope:this_union = {
				every_in_list = {
					variable = union_members
					limit = {
						is_alive = yes
						
						NOT = { this = scope:leaving_person }
					}
					add_opinion = {
						modifier = left_union_opinion
						target = scope:leaving_person
					}
				}
			}
		}
		remove_variable = this_union
		if = {
			limit = { has_character_modifier = faction_leader_modifier }
			remove_character_modifier = faction_leader_modifier
		}
		if = {
			limit = { has_character_modifier = union_member_modifier }
			remove_character_modifier = union_member_modifier
		}
	}
}
try_to_break_this_union_effect = {
	save_scope_as = former_leader
	add_to_list = former_union_members
	
	if = {
		limit = {
			scope:this_union ?= {
				any_in_list = {
					variable = union_members
					NOT = { this = scope:former_leader }
					can_lead_union_trigger = { landless = no }
				}
			}
		}
		scope:this_union = {
			ordered_in_list = {
				variable = union_members
				limit = {
					NOT = { this = scope:former_leader }
					can_lead_union_trigger = { landless = no }
				}
				order_by = this_union_leader_values
				max = 1
				
				try_to_transfer_this_union_custom_name_effect = { PREV_HOLDER = scope:former_leader }
				become_leader_of_union_effect = {
					give_modifiers = yes
				}

				trigger_event = WCPLF.200
			}
		}
	}
	else = {
		break_union_effect = yes
	}
}
break_union_effect = {
	custom_description = {
		text = break_union_effect
		
		save_scope_as = former_leader
		add_to_list = former_union_members

		if = {
			limit = { NOT = { exists = scope:this_union } }
			random_in_global_list = {
				variable = all_unions
				limit = {
					var:this_union = prev.var:this_union
				}
				save_temporary_scope_as = this_union
			}
		}
		leave_this_union_effect = yes
		
		scope:this_union ?= {
			every_in_list = {
				variable = union_members
				limit = {
					is_alive = yes
					
					NOT = { this = scope:former_leader }
				}
				add_to_list = former_union_members
				set_variable = { name = former_union value = scope:this_union.var:this_union days = 365 }
				
				leave_this_union_effect = yes
			}
			add_union_creation_cooldown_base_effect = yes
		}

		every_in_list = {
			list = former_union_members
			limit = {
				is_ai = no
			}
			
			trigger_event = WCPLF.250
		}
		scope:this_union ?= {
			remove_list_global_variable = {
				name = all_unions
				target = this
			}
			end_story = yes
		}
	}
}

### Inheritance and clean up effects
try_to_inherit_union_effect = {
	if = {
		limit = { $PREV_HOLDER$ = scope:$union$.story_owner }
		#should move this into story owner death on action
		if = {
			limit = { $PREV_HOLDER$ = { NOT = { can_lead_union_trigger = { landless = no } } } }
			if = {
				limit = { can_lead_union_trigger = { landless = no } var:this_union = scope:$union$.var:this_union }
				try_to_transfer_this_union_custom_name_effect = { PREV_HOLDER = $PREV_HOLDER$ }
				become_leader_of_union_effect = {
					give_modifiers = yes
				}
			}
			# Must go after become_leader_of_union_effect
			$PREV_HOLDER$ = { leave_or_break_this_union_effect = yes }
		}
	}
	else = {
		if = {
			limit = { $PREV_HOLDER$ = { NOT = { can_be_in_union_trigger = { UNION = $union$ landless = no } } } }
			$PREV_HOLDER$ = { leave_or_break_this_union_effect = yes }
			if = {
				limit = { can_be_in_union_trigger = { UNION = $union$ landless = no } }
				join_this_union_scope_effect = { UNION = $union$ give_modifiers = yes }
			}
		}
	}
}
try_to_inherit_any_union_effect = {
	if = {
		limit = { $PREV_HOLDER$ = { is_in_any_this_union_trigger = yes } }
		random_in_global_list = {
			variable = all_unions
			limit = {
				any_in_list = { variable = union_members this = $PREV_HOLDER$ }
			}
			save_scope_as = inherited_union
		}
		try_to_inherit_union_effect = { PREV_HOLDER = $PREV_HOLDER$ union = inherited_union }
	}
}
try_to_clean_up_this_union_effect = {
	if = {
		limit = { any_in_global_list = { variable = all_unions story_owner = prev } }
		if = {
			limit = { NOT = { can_lead_union_trigger = { landless = no } } }
			leave_or_break_this_union_effect = yes
		}
	}
	else = {
		if = {
			limit = {
				save_temporary_scope_as = possible_union_member
				has_global_variable_list = all_unions
				any_in_global_list = {
					variable = all_unions
					any_in_list = {
						variable = union_members
						this = scope:possible_union_member
					}
					save_temporary_scope_as = my_union
				}
				NOT = { can_be_in_union_trigger = { UNION = my_union landless = no } }
			}
			leave_or_break_this_union_effect = yes
		}
	}
}
try_to_clean_up_any_union_effect = {
	if = {
		limit = { is_in_any_this_union_trigger = yes }
		try_to_clean_up_this_union_effect = yes
	}
}

add_alliances_with_union_effect = {
	if = { limit = { exists = scope:joining_union NOT = { exists = scope:this_union }} scope:joining_union = { save_temporary_scope_as = this_union } }
	if = {
		limit = { NOT = { exists = scope:this_union } }
		random_in_global_list = {
			variable = all_unions
			limit = {
				var:this_union = prev.var:this_union
			}
			save_temporary_scope_as = this_union
		}
	}
	save_temporary_scope_as = alliance_actor
	scope:this_union ?= {
		every_in_list = {
			variable = union_members
			limit = {
				is_alive = yes
				
				NOT = { this = scope:alliance_actor }
				NOT = { is_allied_to = scope:alliance_actor }
			}
			scope:alliance_actor = {
				create_alliance = {
					target = prev
					allied_through_owner = scope:alliance_actor
					allied_through_target = prev
				}
			}
		}
	}
}

request_this_union_joining_effect = {
	save_scope_as = actor
	random_in_global_list = {
		variable = all_unions
		limit = {
			var:this_union = flag:$faction$
		}
		story_owner = { save_scope_as = recipient }
		save_scope_as = joining_union
	}
	
	stress_impact = {
		shy = minor_stress_impact_gain
	}
	
	show_as_tooltip = { join_this_union_scope_effect = { UNION = joining_union give_modifiers = yes } }
	
	scope:recipient = { trigger_event = WCPLF.150 }
}

invite_to_this_union_effect = {
	scope:actor = {
		trigger_event = WCPLF.305

		stress_impact = {
			shy = minor_stress_impact_gain
		}

		if = {
			limit = {
				scope:hook = yes
				has_hook = scope:recipient
			}
			use_hook = scope:recipient
		}
	}

	random_in_global_list = {
		variable = all_unions
		limit = {
			var:this_union = scope:actor.var:this_union
		}
		save_scope_as = joining_union
	}
	scope:recipient = {
		join_this_union_scope_effect = { UNION = joining_union give_modifiers = yes }
	}
}

try_to_transfer_this_union_custom_name_effect = {
	if = {
		limit = {
			NOT = { has_variable = custom_union_name }
			$PREV_HOLDER$ = { has_variable = custom_union_name }
		}
		set_variable = {
			name = custom_union_name
			value = $PREV_HOLDER$.var:custom_union_name
		}
		copy_localized_text = {
			key = custom_union_name
			target = $PREV_HOLDER$
		}
	}
}
remove_this_union_loc_effect = {
	if = {
		limit = { has_variable = custom_union_name }
		remove_variable = custom_union_name
		remove_localized_text = custom_union_name
	}
}

add_union_creation_cooldown_effect = {
	set_global_variable = {
		name = $faction$_creation_cooldown
		value = flag:yes
		years = 10
	}
}
set_this_union_cooldown_effect = {
	add_character_flag = { flag = this_union_cooldown_flag years = 1 }
}
clear_this_union_cooldown_effect = {
	remove_character_flag = this_union_cooldown_flag
}