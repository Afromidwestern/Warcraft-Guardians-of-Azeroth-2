#Sets up the Outcome Roll values
hostile_scheme_outcome_roll_setup_effect = {
	#Discovery Roll setup
	save_scope_value_as = {
		name = discovery_chance
		value = {
			value = 100
			subtract = scope:scheme.scheme_secrecy
		}
	}
}

hostile_scheme_success_roll_effect = {
	random = {
		chance = scope:scheme.scheme_success_chance
		custom_tooltip = scheme_remain_secret_roll_tt
		save_scope_value_as = {
			name = scheme_successful
			value = yes
		}
	}
}

hostile_scheme_discovery_roll_effect = {
	random = {
		chance = scope:discovery_chance
		custom_tooltip = $TOOLTIP$
		save_scope_value_as = {
			name = scheme_discovered
			value = yes
		}
		if = {
			limit = { exists = scope:target.host }
			scope:target.host = { save_scope_as = murder_exposer }
		}
		else = {
			scope:target = { save_scope_as = scheme_exposer }
		}
	}
}

hostile_scheme_rival_check_effect = {
	if = {
		limit = {
			scope:scheme.scheme_owner = {
				has_relation_rival = scope:scheme.scheme_target
			}
		}
		save_scope_value_as = {
			name = targeted_rival
			value = yes
		}
	}
}

dont_excecute_scheme_effect = {
	scope:scheme = {
		add_scheme_progress = -10 # Reset scheme progress
	}

	stress_impact = {
		impatient = medium_stress_impact_gain
		stubborn = medium_stress_impact_gain
	}
}

abandon_scheme_effect = {
	scope:scheme = {
		end_scheme = yes
	}

	stress_impact = {
		stubborn = medium_stress_impact_gain
	}
}

restart_scheme_effect = {
	play_music_cue = "mx_cue_stress"
	custom_tooltip = restart_scheme_tt
	
	scope:scheme = {
		add_scheme_progress = -10 # Reset scheme progress
	}
}

hostile_scheme_opinion_effect = {
	#If you pass scheme, check scheme type
	if = {
		limit = {
			exists = $SCHEME$
		}
		$SCHEME$ = {
			if = {
				limit = { scheme_type = stasis_trap_scheme }
				save_temporary_scope_value_as = {
					name = scheme_name
					value = flag:stasis_trap_scheme
				}
			}
			else = {
				save_temporary_scope_value_as = {
					name = scheme_name
					value = flag:murder
				}
			}
		}
	}
	#Otherwise consider you pass scheme type
	else = {
		save_temporary_scope_value_as = {
			name = scheme_name
			value = flag:$SCHEME$
		}
	}
	
	$VICTIM$ = {
		if = {
			limit = { is_alive = yes }

			if = {
				limit = { scope:scheme_name = flag:stasis_trap_scheme }
				if = {
					limit = { NOT = { exists = scope:scheme_successful } }
					add_opinion = {
						target = $ATTACKER$
						modifier = attempted_stasis_trapion_opinion
					}
				}
				else = {
					add_opinion = {
						target = $ATTACKER$
						modifier = stasis_traped_me_opinion
					}
				}
			}
			#By default it's murder
			else = {
				if = {
					limit = { NOT = { exists = scope:scheme_successful } }
					add_opinion = {
						target = $ATTACKER$
						modifier = attempted_murder_me_crime
					}
					hidden_effect = {
						add_opinion = {
							target = $ATTACKER$
							modifier = murder_personal_grudge_opinion
							years = 2
						}
					}
				}
			}
		}

		every_spouse = {
			limit = { NOT = { this = $ATTACKER$ } }
			add_to_temporary_list = close_family_scheme_opinion_list
		}
		every_close_family_member = {
			limit = { NOT = { this = $ATTACKER$ } }
			add_to_temporary_list = close_family_scheme_opinion_list
		}

		if = {
			limit = {
				any_in_list = {
					list = close_family_scheme_opinion_list
					always = yes
				}
			}
			every_in_list = {
				list = close_family_scheme_opinion_list
				custom = all_close_family_and_spouses

				if = {
					limit = { scope:scheme_name = flag:stasis_trap_scheme }
					if = {
						limit = { NOT = { exists = scope:scheme_successful } }
						add_opinion = {
							target = $ATTACKER$
							modifier = attempted_stasis_trapion_close_family_opinion
						}
					}
					else = {
						add_opinion = {
							target = $ATTACKER$
							modifier = stasis_traped_close_family_opinion
						}
					}
				}
				#By default it's murder
				else = {
					if = {
						limit = { NOT = { exists = scope:scheme_successful } }
						add_opinion = {
							target = $ATTACKER$
							modifier = attempted_murder_close_family_crime
						}
					}
					else = {
						add_opinion = {
							target = $ATTACKER$
							modifier = murdered_close_family_crime
						}
					}
				}
			}
		}
	}
}