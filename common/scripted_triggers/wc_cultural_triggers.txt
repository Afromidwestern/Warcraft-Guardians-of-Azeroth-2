### Like... triggers
# Heritages
like_north_germanic_group_trigger = {
	OR = {
		like_norse_culture_trigger = yes
		has_cultural_pillar = heritage_ulduaric
		has_cultural_pillar = heritage_uldamanic
		has_cultural_pillar = heritage_dwarven
	}
}
like_heritage_west_slavic_trigger = {
	like_polish_culture_trigger = yes
}
like_mongolic_group_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = {
		OR = {
			has_cultural_pillar = heritage_zaetaric
			like_mongol_culture_trigger = yes
		}
	}
}
like_turkic_group_trigger = {
	always = no
}
like_byzantine_group_trigger = {
	always = no
}
like_dravidian_culture_trigger = {
	always = no
}
like_indo_aryan_culture_trigger = {
	always = no
}
like_heritage_iberian_trigger = {
	always = no
}
like_heritage_berber_trigger = {
	has_cultural_pillar = heritage_southern
}
like_heritage_east_slavic_trigger = {
	like_russian_culture_trigger = yes
}
like_heritage_brythonic_trigger = {
	this = culture:drust
	any_parent_culture_or_above = {
		this = culture:drust
	}
}
like_heritage_central_germanic_trigger = {
	has_cultural_pillar = heritage_arathi
}
like_heritage_goidelic_trigger = {
	always = no
}
like_heritage_latin_trigger = {
	has_cultural_pillar = heritage_gorian
}
like_heritage_west_germanic_trigger = {
	has_cultural_pillar = heritage_gilnean
}
like_heritage_iranian_trigger = {
	always = no
}
like_heritage_frankish_trigger = {
	like_norman_culture_trigger = yes
}
like_heritage_arabic_trigger = {
	like_culture_bedouin_trigger = yes
}
like_heritage_burman_trigger = {
	always = no
}
like_heritage_east_african_trigger = {
	like_ethiopian_culture_trigger = yes
}
like_heritage_senegambian_trigger = {
	always = no
}
like_heritage_akan_trigger = {
	always = no
}
like_heritage_west_african_trigger = {
	always = no
}
like_heritage_yoruba_trigger = {
	always = no
}
like_heritage_central_african_trigger = {
	has_cultural_pillar = heritage_pygmy
}
like_heritage_chinese_trigger = {
	OR = {
		has_cultural_pillar = heritage_pandaren
		has_cultural_pillar = heritage_mogu
	}
}
like_heritage_balto_finnic_trigger = {
	always = no
}
like_heritage_volga_finnic_trigger = {
	always = no
}
like_heritage_ugro_permian_trigger = {
	always = no
}
like_heritage_baltic_trigger = {
	always = no
}
like_heritage_tibetan_trigger = {
	has_cultural_pillar = heritage_grummle
}
like_heritage_qiangic_trigger = {
	always = no
}
like_heritage_somalian_trigger = {
	always = no
}
like_heritage_israelite_trigger = {
	always = no
}
like_heritage_south_slavic_trigger = {
	always = no
}
like_heritage_magyar_trigger = {
	always = no
}
like_heritage_sahelian_trigger = {
	always = no
}

# Cultures
like_polish_culture_trigger = {
	has_cultural_pillar = heritage_northern
}
like_russian_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = { has_cultural_pillar = heritage_northern }
}
like_norse_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = { has_cultural_pillar = heritage_vrykulic }
}
like_mongol_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = {
		has_cultural_pillar = heritage_yaungolic
	}
}
like_ethiopian_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = { has_cultural_pillar = heritage_zulite }
}
like_norman_culture_trigger = {
	always = no
}
like_culture_bedouin_trigger = {
	has_cultural_pillar = heritage_sethralic
}

# Languages
like_language_frankish_trigger = {
	always = no
}

marine_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = {
		OR = {
			has_cultural_pillar = heritage_southern
			has_cultural_pillar = heritage_gilnean
			has_cultural_pillar = heritage_jinyu
			has_cultural_pillar = heritage_amphibian
		}
	}
}
bow_culture_trigger = {
	trigger_if = {
		limit = { exists = culture }
		culture = { save_temporary_scope_as = temp_culture }
	}
	trigger_else = {
		save_temporary_scope_as = temp_culture
	}
	
	scope:temp_culture = {
		OR = {
			has_cultural_pillar = heritage_darnassian
			has_cultural_pillar = heritage_highborne
		}
	}
}

has_alliance_culture_trigger = {
	culture = {
		OR = {
			has_cultural_pillar = heritage_argusean
			has_cultural_pillar = heritage_cenaric
			has_cultural_pillar = heritage_dwarven
			has_cultural_pillar = heritage_jalgaric
			has_cultural_pillar = heritage_gnomish
			has_cultural_pillar = heritage_highborne
			has_cultural_pillar = heritage_northern
			has_cultural_pillar = heritage_arathi
			has_cultural_pillar = heritage_gilnean
			has_cultural_pillar = heritage_darnassian
			has_cultural_pillar = heritage_jinyu
		}
	}
}
has_horde_culture_trigger = {
	culture = {
		OR = {
			has_goblin_heritage_trigger = yes
			has_cultural_pillar = heritage_hozen
			has_cultural_pillar = heritage_gorian
			has_cultural_pillar = heritage_orcish
			has_bovine_heritage_trigger = yes
			has_cultural_pillar = heritage_zulite
			has_cultural_pillar = heritage_undead
			OR = {
				is_culture_or_parent_culture_trigger = { CULTURE = culture:blood_elf }
				is_culture_or_parent_culture_trigger = { CULTURE = culture:nightborne }
				
			}
		}
	}
}
prefers_axe_trigger = {
	culture = { like_north_germanic_group_trigger = yes }
}
prefers_piracy_trigger = {
	OR = {
		has_cultural_pillar = heritage_southern
		has_goblin_heritage_trigger = yes
	}
}

# Cultures formed during the game
has_newly_formed_culture_trigger = {
	OR = {
		this = culture:blood_elf
		this = culture:theramore
		this = culture:wastewander
		this = culture:durotaric
	}
}

has_draenor_culture_trigger = {
	custom_description = {
		text = draenor_culture_trigger_tooltip
		culture = { draenor_culture_trigger = yes }
	}
}
draenor_culture_trigger = {
	OR = {
		has_cultural_pillar = heritage_orcish
		has_cultural_pillar = heritage_gorian
		has_cultural_pillar = heritage_argusean
		has_cultural_pillar = heritage_apexis
	}
}

has_human_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_northern
		has_cultural_pillar = heritage_arathi
		has_cultural_pillar = heritage_gilnean
		has_cultural_pillar = heritage_southern
	}
}
has_bovine_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_yaungolic
		has_cultural_pillar = heritage_tauren
		has_cultural_pillar = heritage_taunka
	}
}
has_elven_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_darnassian
		has_cultural_pillar = heritage_highborne
		has_cultural_pillar = heritage_xavic
		has_cultural_pillar = heritage_azsharic
	}
}
has_titanforged_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_ulduaric
		has_cultural_pillar = heritage_uldumic
	}
}
has_cenarius_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_cenaric
		has_cultural_pillar = heritage_zaetaric
		has_cultural_pillar = heritage_tharian
	}
}
has_goblin_heritage_trigger = {
	OR = {
		has_cultural_pillar = heritage_goblin
		has_cultural_pillar = heritage_gilblin
	}
}

has_common_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_common
		has_cultural_pillar = language_low_common
		has_cultural_pillar = language_gutterspeak
	}
}
has_khazmodan_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_dwarven
		has_cultural_pillar = language_gnomish
	}
}
has_elven_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_darnassian
		has_cultural_pillar = language_high_darnassian
		has_cultural_pillar = language_elunic
		has_cultural_pillar = language_thalassian
		has_cultural_pillar = language_shalassian
		has_cultural_pillar = language_nazja
	}
}
has_vrykul_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_vrykul
		has_cultural_pillar = language_drust
	}
}
has_draenor_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_orcish
		has_cultural_pillar = language_ogre
	}
}
has_elemental_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_ignan
		has_cultural_pillar = language_aquan
		has_cultural_pillar = language_auran
		has_cultural_pillar = language_terran
		has_cultural_pillar = language_kalimag
	}
}
has_pandaria_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_mogu
		has_cultural_pillar = language_jinyu
		has_cultural_pillar = language_pandaren
	}
}
has_titan_language_group_trigger = {
	OR = {
		has_vrykul_language_group_trigger = yes
		has_cultural_pillar = language_titanic
		has_cultural_pillar = language_giant
		has_cultural_pillar = language_drogbar
	}
}
has_titan_related_language_trigger = {
	OR = {
		has_titan_language_group_trigger = yes
		has_cultural_pillar = language_tolvir
		has_pandaria_language_group_trigger = yes
		has_cultural_pillar = language_draconic
	}
}
has_aqir_language_group_trigger = {
	OR = {
		has_cultural_pillar = language_qiraji
		has_cultural_pillar = language_nerubian
		has_cultural_pillar = language_mantid
	}
}

is_culture_or_parent_culture_trigger = {
	OR = {
		this = $CULTURE$
		any_parent_culture_or_above = {
			this = $CULTURE$
		}
	}
}

heritage_gives_sea_raiding_trigger = {
	OR = {
		has_cultural_pillar = heritage_jinyu
		has_cultural_pillar = heritage_gilblin
		has_cultural_pillar = heritage_azsharic
		has_cultural_pillar = heritage_amphibian
		has_cultural_pillar = heritage_aquatic
	}
}

# Titans, wild gods, old empires like elves and trolls
has_mystical_ancestors_trigger = {
	OR = {
		has_titanforged_heritage_trigger = yes
		has_cenarius_heritage_trigger = yes
		has_elven_heritage_trigger = yes
		has_cultural_pillar = heritage_zulite
	}
}

# Cultural MAA triggers - Used in various places for triggers, AI weights, etc.
culture_has_caster_maa = {
	OR = {
		# Warcraft when we use traditions
		#has_cultural_parameter = unlock_maa_archmage
		#has_cultural_parameter = unlock_maa_banshee
		#has_cultural_parameter = unlock_maa_chaosborn
		#has_cultural_parameter = unlock_maa_deathcaller		
		#has_cultural_parameter = unlock_maa_hag
		#has_cultural_parameter = unlock_maa_hexer
		#has_cultural_parameter = unlock_maa_magi
		#has_cultural_parameter = unlock_maa_siren
		#has_cultural_parameter = unlock_maa_subjagators
		#has_cultural_parameter = unlock_maa_technomage
		#has_cultural_parameter = unlock_maa_thornweaver
		#has_cultural_parameter = unlock_maa_venomancer
		#has_cultural_parameter = unlock_maa_witch_doctor

		# Warcraft
		has_innovation = innovation_archmage
		has_innovation = innovation_centaur_tactics
		has_innovation = innovation_chaosborn
		has_innovation = innovation_gnome_mechanics
		has_innovation = innovation_hag
		has_innovation = innovation_hexer
		has_innovation = innovation_naga_army
		has_innovation = innovation_nerubian_tactics
		has_innovation = innovation_ogre_tactics
		has_innovation = innovation_quillboar_tactics
		has_innovation = innovation_subjagators
		has_innovation = innovation_troll_tactics
		has_innovation = innovation_undead_tactics
	}
}

culture_has_massive_infantry_maa = {
	OR = {
		# Warcraft when we use traditions
		#has_cultural_parameter = unlock_maa_abomination
		#has_cultural_parameter = unlock_maa_dire_troll
		#has_cultural_parameter = unlock_maa_golem_arcane
		#has_cultural_parameter = unlock_maa_golem_mech
		#has_cultural_parameter = unlock_maa_infernal
		#has_cultural_parameter = unlock_maa_iron_giant
		#has_cultural_parameter = unlock_maa_mountain_giant
		#has_cultural_parameter = unlock_maa_sea_giant
		#has_cultural_parameter = unlock_maa_shredder
		#has_cultural_parameter = unlock_maa_silithid_colossus
		#has_cultural_parameter = unlock_maa_steam_warrior

		# Warcraft
		has_innovation = innovation_demon_tactics
		has_innovation = innovation_drakonid
		has_innovation = innovation_gnome_mechanics
		has_innovation = innovation_goblin_mechanics
		has_innovation = innovation_golem_arcane
		has_innovation = innovation_golem_mech
		has_innovation = innovation_naga_army
		has_innovation = innovation_night_elf_ground
		has_innovation = innovation_silithid_colossus
		has_innovation = innovation_titan_tactics
		has_innovation = innovation_troll_tactics
		has_innovation = innovation_undead_tactics
	}
}

culture_has_light_aerial_maa = {
	OR = {
		# Warcraft when we use traditions
		#has_cultural_parameter = unlock_maa_couatl
		#has_cultural_parameter = unlock_maa_destroyer
		#has_cultural_parameter = unlock_maa_dragonhawk_rider
		#has_cultural_parameter = unlock_maa_faerie_dragon
		#has_cultural_parameter = unlock_maa_gryphon_rider
		#has_cultural_parameter = unlock_maa_gyrocopter

		# Warcraft
		has_innovation = innovation_dragonhawk
		has_innovation = innovation_gryphon
		has_innovation = innovation_gyrocopter
		has_innovation = innovation_naga_army
		has_innovation = innovation_night_elf_aerial
		has_innovation = innovation_scourge_aerial
		has_innovation = innovation_wyvern
	}
}

culture_has_massive_aerial_maa = {
	OR = {
		# Warcraft when we use traditions
		#has_cultural_parameter = unlock_maa_chimaera
		#has_cultural_parameter = unlock_maa_cloud_serpents
		#has_cultural_parameter = unlock_maa_dragon
		#has_cultural_parameter = unlock_maa_frost_wyrm
		#has_cultural_parameter = unlock_maa_proto_drake_rider
		#has_cultural_parameter = unlock_maa_zeppelin

		# Warcraft
		has_innovation = innovation_cloud_serpents
		has_innovation = innovation_dragon
		has_innovation = innovation_goblin_air
		has_innovation = innovation_night_elf_aerial
		has_innovation = innovation_proto_drake_rider
		has_innovation = innovation_scourge_aerial
	}
}
##########################################
###############  Mak'gora  ###############
##########################################

basic_can_have_makgora_trigger = {
	# This is referenced elsewhere, so we keep it separate in order to allow justification for TbCs outside of interactions.
	culture = { has_cultural_parameter = has_access_to_makgora_trials_by_combat }
}

can_have_makgora_trigger = {
	# First, evaluate culture to trim down our potentials list.
	scope:actor = { basic_can_have_makgora_trigger = yes }
	scope:recipient = { basic_can_have_makgora_trigger = yes }
}

eligible_knight_to_champion_makgora_trigger = {
	is_available_ai = yes
	can_start_single_combat_trigger = yes
}

makgora_shown_and_not_invalid_trigger = {
	# Scope:actor must be able to fight personally.
	scope:actor = { can_start_single_combat_trigger = yes }
	# Scope:actor cannot challenge someone they have a ceasefire against.
	scope:actor = {
		NOT = { has_truce = scope:recipient }
	}
	# Scope:actor *definitely* cannot challenge someone they're at war with.
	scope:actor = {
		NOT = { is_at_war_with = scope:recipient }
	}
}

makgora_is_valid_trigger = {
	# Calc some stuff that might invalidate elsewhere before the bout is sorted.
	makgora_shown_and_not_invalid_trigger = yes
	# Must have an imprisonment reason on the character.
	scope:actor = { has_imprisonment_reason = scope:recipient }
	# Scope:recipient must be able to fight or else have at least *one* designatable champion.
	scope:recipient = {
		trigger_if = {
			limit = {
				OR = {
					can_start_single_combat_eligibility_checks_trigger = no
					NOT = {
						can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:recipient }
					}
				}
			}
			custom_description = {
				text = "fp1_tbc_no_available_champions"
				OR = {
					any_knight = { eligible_knight_to_champion_makgora_trigger = yes }
					# Can use champion court position too if available
					AND = {
						employs_court_position = champion_court_position
						any_court_position_holder = {
							type = champion_court_position 
							eligible_knight_to_champion_makgora_trigger = yes #trigger checks for prowess, and while its not mandatory that the champ has a high value, we don't want to trap them into having to use their prowess 3 champ to defend their life
						}
					}
				}
			}
		}
	}
	# Scope:recipient must not be banned from single combat.
	scope:recipient = {
		custom_description = {
			text = "fp1_tbc_recipient_banned_from_combat"
			can_start_single_combat_banned_checks_trigger = no
		}
	}
	# Neither of the characters can be imprisoned.
	scope:actor = { is_imprisoned = no }
	scope:recipient = { is_imprisoned = no }
}

