story_cycle_forsaken_origins = { 
	on_setup = {
		#possibly make it so that only one person can ever get this story cycle
		debug_log = "SS - forsaken origin story cycle started"
	}

	on_end = {
		#possibly make it so that no one can ever get this story cycle again
	}

	on_owner_death = {
		try_to_set_forsaken_origin_story_owner = { OWNER = story_owner.primary_heir }
	}

	#events that can happen during construction of undercity
	effect_group = {
		days = 7
		
		trigger = { 
			title:b_lordaeron = { 
				has_variable = develop_the_undercity
				var:develop_the_undercity ?= flag:construction
			}
		}

		#check for ownership of lordaeron
		triggered_effect = { 
			trigger = { 
				title:b_lordaeron = { 
					holder = { 	
						self_or_liege_is_of_forsaken_like_culture = no	
					}
				}
			}
			effect = { 
				story_owner = { 
					trigger_event = { 
						id = lordaeron.1002
						days = 7
						delayed = yes
					}
				}
			}
		}
	}

	# effect_group = {
	# 	days = 7

	# 	trigger = { 
	# 		title:b_lordaeron = { 
	# 			holder = { 	
	# 				self_or_liege_is_of_forsaken_like_culture = yes	
	# 			}
	# 			has_variable = develop_the_undercity
	# 			var:develop_the_undercity ?= flag:finished
	# 		}
	# 	}

	# 	triggered_effect = { 
	# 		#alert the original builder that undercity was completed
	# 		story_owner = { 
	# 			trigger_event = { 
	# 				id = lordaeron.1001
	# 				days = 7
	# 				delayed = yes
	# 			}
	# 		}
	# 		# alert the current owner that undercity was completed
	# 		title:b_lordaeron = {
	# 			holder = { 
	# 				trigger_event = { 
	# 					id = lordaeron.1004
	# 					days = 7
	# 					delayed = yes
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# NAND = { 
	# 	AND = { 	# make sure owner is Forsaken
	# 		is_of_forsaken_like_culture = yes 	
	# 		this = story_owner
	# 	}
	# 	AND = { 	# or that I did NOT gave out the title to someome...
	# 		self_or_liege_is_of_forsaken_like_culture = yes 
	# 		any_liege_or_above = {this = story_owner }
	# 	}
	# }

	#fun random events
	effect_group = {
		days = 60

		triggered_effect = {
			trigger = { 
				exists = story_owner 
			}
			effect = { 
				random_list = { 
					10 = { 
						story_owner = { 
							trigger_event = { 
								id = lordaeron.9001
								days = {1 30}
								delayed = yes
							}
						}
					}
					70 = { 
						# uneventful
					}
				}
			}
		}
	}
}