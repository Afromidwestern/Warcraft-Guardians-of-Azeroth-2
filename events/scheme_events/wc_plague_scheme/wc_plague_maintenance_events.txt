namespace = plague_maintenance

# Choosing of land to plague
plague_maintenance.100 = {
	type = character_event
	title = plague_maintenance_100_TITLE
	desc = plague_maintenance_100_DESC
	theme = corruption
	override_background = {
		event_background = dungeon
	}
	left_portrait = scope:actor

	immediate = {
		# Creates list with all baronies that can be plagued
		scope:recipient = {
			every_sub_realm_county = {
				limit = {
					is_vulnerable_to_plague_county_trigger = yes
				}
				add_to_list = counties_to_plague
			}
		}

		# First barony
		ordered_in_list = {
			list = counties_to_plague
			order_by = {
				value = development_level
			}
			position = 0
			save_scope_as = first_county
		}

		# Second barony
		if = {
			limit = { list_size = { name = counties_to_plague value >= 2 } }
			ordered_in_list = {
				list = counties_to_plague
				order_by = {
					value = development_level
				}
				position = 1
				save_scope_as = second_county
			}
		}

		# Third barony
		if = {
			limit = { list_size = { name = counties_to_plague value >= 3 } }
			ordered_in_list = {
				list = counties_to_plague
				order_by = {
					value = development_level
				}
				position = 2
				save_scope_as = third_county
			}
		}
	}

	# Option to get first barony
	option = {
		name = plague_maintenance_100_A

		trigger = {
			exists = scope:first_county
		}

		start_scheme = {
			type = plague
			target = scope:recipient
		}

		random_scheme = {
			limit = {
				scheme_type = plague
				scheme_target = scope:recipient
			}
			set_variable = {
				name = plague_center
				value = scope:first_county
			}
		}
	}

	# Option to get second barony
	option = {
		name = plague_maintenance_100_B

		trigger = {
			exists = scope:second_county
		}

		start_scheme = {
			type = plague
			target = scope:recipient
		}

		random_scheme = {
			limit = {
				scheme_type = plague
				scheme_target = scope:recipient
			}
			set_variable = {
				name = plague_center
				value = scope:second_county
			}
		}
	}

	# Option to get third barony
	option = {
		name = plague_maintenance_100_C

		trigger = {
			exists = scope:third_county
		}

		start_scheme = {
			type = plague
			target = scope:recipient
		}

		random_scheme = {
			limit = {
				scheme_type = plague
				scheme_target = scope:recipient
			}
			set_variable = {
				name = plague_center
				value = scope:third_county
			}
		}
	}

	# Option to do nothing
	option = {
		name = plague_maintenance_100_D
	}
}
