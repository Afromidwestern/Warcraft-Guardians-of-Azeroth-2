#Events for Plague Scheme Outcomes

namespace = plague_outcome

##################################
# MAINTENANCE EVENTS 0000 - 0099
##################################

plague_outcome.0001 = {

	hidden = yes

	immediate = {
		scope:scheme.var:plague_center = { save_scope_as = plague_center }
		
		add_character_flag = { #To make sure you never resolve two murders at once
			flag = is_in_event_plague_outcome_0001
			days = 1
		}
		trigger_event = {
			#Run the setup for the chosen execution type.
			on_action = plague_method_selection
		}
	}
}



#################
# METHOD SELECTION EVENTS
# 0100-0199
#################
# These are used to pick out the plaguing method.

# Everyone turns into an undead
plague_outcome.0101 = {
	type = character_event
	hidden = yes

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_value_as = {
			name = plague_method
			value = flag:undead_conversion
		}
		trigger_event = { on_action = plague_setup }
	}
}

#######################################
# "REGULAR" PLAGUING SETUPS 1000 - 1999
#######################################
# Whichever event is randomly rolled here determines what form the event takes.
# Remember to set flags for reference when generating event text in success or failure event.

#Setup for everyone turning into an undead
plague_outcome.1001 = {
	title = plague_outcome.1001.t
	desc = plague_outcome.1001.d
	theme = corruption
	override_background = {
		event_background = dungeon
	}
	left_portrait = scope:owner
	right_portrait = scope:target

	trigger = {
		scope:plague_method = flag:undead_conversion
	}

	immediate = {
		hostile_scheme_outcome_roll_setup_effect = yes
	}

	option = {
		name = plague_outcome.1001.a
		
		plague_outcome_roll_effect = yes
	}

	option = {
		name = murder_outcome.1001.b
		
		dont_execute_scheme_effect = yes
		
		ai_chance = {
			base = 0
		}
	}
}

#####################################
# SUCCESSFUL OUTCOME 2000 - 2999
#####################################

########################
# Undead conversion
########################

plague_outcome.2000 = {
	type = character_event
	title = plague_outcome.2000.t
	desc = plague_outcome.2000.desc
	theme = corruption
	override_background = {
		event_background = dungeon
	}

	left_portrait = scope:owner
	right_portrait = scope:target

	trigger = {
		scope:plague_method = flag:undead_conversion
	}

	immediate = {
		plague_success_immediate_effect = yes
	}

	option = {
		name = plague_outcome.2000.a
		plague_success_option_effect = yes
	}
}

###############################
# FAILURE OUTCOMES 4000 - 4999
###############################

#######################
# Undead Conversion
#######################
plague_outcome.4001 = {
	type = character_event
	title = plague_outcome.4001.t
	### START DESC
	desc = {
		# Start off with declaration of failure
		# Include Target's name!
		random_valid = {
			desc = plague_outcome.4001.failure_declaration_1
			desc = plague_outcome.4001.failure_declaration_2
			desc = plague_outcome.4001.failure_declaration_3
		}
	
		desc = plague_outcome.4001.desc

		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = plague_outcome.4001.exposed_scheme
			}
			desc = plague_outcome.4001.not_exposed_scheme
		}
	}
	### END DESC
	theme = corruption
	override_background = {
		event_background = dungeon
	}
	left_portrait = {
		character = scope:owner
		animation = rage
	}
	right_portrait = {
		character = scope:target
		animation = shock
	}

	trigger = {
		scope:plague_method = flag:undead_conversion
	}

	immediate = {
		# random_dummy_gender_assassin_effect = yes
		plague_failure_immediate_effect = yes
	}

	option = {
		name = plague_outcome.4001.a
		
		abandon_scheme_effect = yes
		
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = plague_outcome.4001.b
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		
		restart_scheme_effect = yes
		
		ai_chance = {
			base = 0
		}
	}
}

############################################
# YOU GOT (ATTEMPTED?) PLAGUED 5000 - 5999
############################################

#You've been plagued
plague_outcome.5001 = {
	type = character_event
	title = plague_outcome.5001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:plague_method = flag:undead_conversion
				}
				desc = plague_outcome.5001.undead_conversion
			}
		}
		triggered_desc = {
			trigger = { exists = scope:scheme_discovered }
			desc = plague_outcome.5001.schemer_known
		}
	}
	theme = corruption
	override_background = {
		event_background = dungeon
	}
	left_portrait = {
		character = scope:owner_to_reveal
		animation = schadenfreude
	}

	immediate = {
		force_owner_to_reveal_use_stealth_clothes_effect = yes
		
		plague_success_victim_immediate_effect = yes
	}

	option = {
		name = plague_outcome.5001.discovered
		trigger = {
			exists = scope:scheme_discovered
		}
	}

	option = {
		name = plague_outcome.5001.not_discovered
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		exclusive = yes
	}
}

#You've survived a murder attempt
plague_outcome.5002 = {
	title = plague_outcome.5002.t
	desc = {
		desc = plague_outcome.5002.undead_conversion
		triggered_desc = {
			trigger = {
				exists = scope:scheme_discovered
			}
			desc = plague_outcome.5002.schemer_known
		}
	}
	theme = murder_scheme
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:owner_to_reveal
		animation = anger
	}

	immediate = {
		force_owner_to_reveal_use_stealth_clothes_effect = yes
		
		plague_failure_victim_immediate_effect = yes
	}

	option = {
		name = plague_outcome.5001.discovered
		trigger = {
			exists = scope:scheme_discovered
		}
	}

	option = {
		name = plague_outcome.5001.not_discovered
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		exclusive = yes
	}
}
