#Events for having secrets

namespace = plague_secrets

###MURDER SECRETS###

#I have been exposed as a someone who has Attempted plague
plague_secrets.0115 = { #by Mathilda Bjarnehed
	type = character_event
	title = plague_secrets.0001.t
	desc = {
		desc = plague_secrets.0115.start.desc
		first_valid = {
			triggered_desc = {
				trigger = { scope:victim = { is_alive = yes } }
				desc = plague_secrets.0115.victim_alive.desc
			}
			desc = plague_secrets.0115.victim_dead.desc
		}
	}
	theme = secret
	left_portrait = scope:secret_exposer
	right_portrait = scope:victim
	
	immediate = {
		secret_exposed_owner_effects_effect = { SECRET = scope:secret POV = root }
		secret_exposed_owner_opinion_effects_effect = yes
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = plague_secrets.0115.a
	}
}	

#Someone I care about has been exposed for Attempted plague/I care about the victim/I am the victim
scripted_trigger plague_secrets_0116_dislikes_plague_attempt = {
	OR = {
		ai_compassion >= 0
		AND = {
			is_close_family_of = scope:victim
			has_relation_friend = scope:victim
			is_spouse_of = scope:victim
			has_relation_lover = scope:victim
		}
		root = scope:victim
	}
	OR = {
		opinion = {
			target = scope:victim
			value > medium_negative_opinion
		}
		root = scope:victim
	}
	NOT = {
		has_trait = sadistic
		opinion = {
			target = scope:victim
			value < medium_positive_opinion
		}
	}
}

plague_secrets.0116 = { #by Mathilda Bjarnehed
	type = character_event
	title = plague_secrets.0106.t
	desc = {
		first_valid = {
			#VICTIM DESC#
			triggered_desc = {
				trigger = { root = scope:victim }
				desc = {
					first_valid = {
						triggered_desc = {
							trigger = { has_character_flag = victim_knows }
							desc = plague_secrets.0106.victim_knows.desc
						}
						desc = plague_secrets.0106.victim.desc
					}
				}
			}
			#NON-VICTIM DESC
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = { plague_secrets_0116_dislikes_plague_attempt = yes }
						desc = plague_secrets.0116.negative.desc
					}
					desc = plague_secrets.0116.positive.desc
				}
			}
		}
	}
	theme = secret
	override_background = {
		trigger = { allowed_to_imprison_character_trigger = { CHARACTER = scope:owner } } # Show throne room if you can order imprisonment
		event_background = throne_room
	}
	left_portrait = scope:secret_exposer
	right_portrait = scope:plaguer
	lower_right_portrait = scope:victim
	
	immediate = {
		secret_exposed_notification_effects_effect = { SECRET = scope:secret CHARACTER = scope:owner }
	}

	#Ok (for non-lieges)
	option = {
		trigger = {
			NAND = {
				allowed_to_imprison_character_trigger = { CHARACTER = scope:plaguer }
				OR = {
					has_opinion_modifier = {
						target = scope:plaguer
						modifier = attempted_murder_close_family_crime
					}
					has_opinion_modifier = {
						target = scope:plaguer
						modifier = attempted_murder_me_crime
					}
				}
			}
		}
		name = {
			trigger = {
				has_character_flag = victim_knows
			}
			text = plague_secrets.0116.victim_knows
		}
		name = {
			trigger = {
				NOT = { has_character_flag = victim_knows }
				plague_secrets_0116_dislikes_plague_attempt = yes
				opinion = {
					target = scope:plaguer
					value >= high_positive_opinion
				}
			}
			text = plague_secrets.0116.likes_negative
		}
		name = {
			trigger = {
				NOT = { has_character_flag = victim_knows }
				plague_secrets_0116_dislikes_plague_attempt = yes
				opinion = {
					target = scope:plaguer
					value < high_positive_opinion
				}
			}
			text = plague_secrets.0116.dislikes_negative
		}
		name = {
			trigger = {
				NOT = { has_character_flag = victim_knows }
				plague_secrets_0116_dislikes_plague_attempt = no
				opinion = {
					target = scope:plaguer
					value >= high_positive_opinion
				}
			}
			text = plague_secrets.0116.likes_positive
		}
		name = {
			trigger = {
				NOT = { has_character_flag = victim_knows }
				plague_secrets_0116_dislikes_plague_attempt = no
				opinion = {
					target = scope:plaguer
					value < high_positive_opinion
				}
			}
			text = plague_secrets.0106.dislikes_positive
		}	
	}

	#Imprison (for lieges)
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:plaguer }
			OR = {
				has_opinion_modifier = {
					target = scope:plaguer
					modifier = attempted_murder_close_family_crime
				}
				has_opinion_modifier = {
					target = scope:plaguer
					modifier = attempted_murder_me_crime
				}
			}
		}
		name = plague_secrets.0116.b

		imprison_character_effect = {
			TARGET = scope:plaguer
			IMPRISONER = root
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = zealous
				add = 100
			}
			modifier = {
				OR = {
					opinion = {
						target = scope:plaguer
						value < 0
					}
					opinion = {
						target = scope:victim
						value < 0
					}
				}
				add = 100
			}
			modifier = {
				OR = {
					is_close_family_of = scope:plaguer
					has_relation_friend = scope:plaguer
					is_close_family_of = scope:plaguer
					has_relation_friend = scope:plaguer
				}
				add = -100
			}
		}
	}

	#For liege: forgive
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:plaguer }
			OR = {
				has_opinion_modifier = {
					target = scope:plaguer
					modifier = attempted_murder_close_family_crime
				}
				has_opinion_modifier = {
					target = scope:plaguer
					modifier = attempted_murder_me_crime
				}
			}
		}
		name = plague_secrets.0116.c

		reverse_add_opinion = {
			target = scope:plaguer
			modifier = grateful_opinion
			opinion = 20
		}
		if = {
			limit = { scope:victim = { is_alive = yes } }
			reverse_add_opinion = {
				target = scope:victim
				modifier = angry_opinion
				opinion = -30
			}
		}


		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = cynical
				add = 100
			}
			modifier = {
				scope:plaguer = { is_ai = no }
				add = 50
			}
			modifier = {
				exists = scope:lover_reaction
				scope:lover_reaction = flag:all_is_good
				add = 100
			}
		}
	}
	

	after = {
		remove_character_flag = victim_knows
	}
}

#I have been exposed as a Murderer
plague_secrets.0117 = { #by Mathilda Bjarnehed
	type = character_event
	title = plague_secrets.0001.t
	desc = {
		desc = plague_secrets.0117.start.desc
		# first_valid = {
		# 	triggered_desc = { #Dynastic murder, dynastic head will be angry
		# 		trigger = {
		# 			murdering_character_is_kinslaying_in_my_or_same_dynasty_lieges_faith_trigger = { CHARACTER = scope:victim }
		# 			has_dynasty = yes
		# 			dynasty = {
		# 				NOT = { dynast = { this = root } }
		# 			}
		# 		}
		# 		desc = plague_secrets.0117.kinslayer.desc
		# 	}
		# 	triggered_desc = { #Dynastic murder, dynasty will be angry
		# 		trigger = {
		# 			murdering_character_is_kinslaying_in_my_or_same_dynasty_lieges_faith_trigger = { CHARACTER = scope:victim }
		# 			has_dynasty = yes
		# 			dynasty = {
		# 				dynast = { this = root }
		# 			}
		# 		}
		# 		desc = plague_secrets.0117.kinslayer_dynasty_head.desc
		# 	}
			desc = plague_secrets.0117.regular.desc
		# }
	}

	theme = secret
	left_portrait = scope:secret_exposer
	right_portrait = scope:victim
	
	immediate = {
		secret_exposed_owner_effects_effect = { SECRET = scope:secret POV = root }
		secret_exposed_owner_opinion_effects_effect = yes
		play_music_cue = "mx_cue_murder"
		if = {
			limit = {
				exists = dynasty
				exists = dynasty.dynast
			}
			dynasty.dynast = { save_scope_as = dynast }
		}
	}

	option = {
		name = plague_secrets.0117.a
	}
}	

#Someone attempted to murder me
plague_secrets.0510 = { #by Mathilda Bjarnehed
	type = character_event
	title = plague_secrets.0510.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						is_close_or_extended_family_of = scope:plaguer
						has_relation_friend = scope:plaguer
						has_relation_lover = scope:plaguer
						is_consort_of = scope:plaguer
						scope:plaguer = { liege = { this = root } }
					}
				}
				desc = plague_secrets.0510.traitor.desc
			}
			desc = plague_secrets.0510.regular.desc
		}
		first_valid = {
			triggered_desc = {
				trigger = { scope:plaguer = { is_alive = yes } }
				desc = secrets.0510.alive.desc
			}
			desc = plague_secrets.0510.dead.desc
		}
	}
	theme = secret
	
	left_portrait = scope:plaguer

	option = {
		name = {
			trigger = { scope:plaguer = { is_alive = yes } }
			text = plague_secrets.0510.a.alive
		}
		name = {
			trigger = { scope:plaguer = { is_alive = no } }
			text = plague_secrets.0510.a.dead
		}
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
	}
}

#Someone attempted to murder a child/heir/parent
plague_secrets.0511 = { #by Mathilda Bjarnehed
	type = character_event
	title = plague_secrets.0510.t
	desc = {
		desc = plague_secrets.0511.regular.desc
		first_valid = {
			triggered_desc = {
				trigger = { scope:plaguer = { is_alive = yes } }
				desc = plague_secrets.0511.alive.desc
			}
			desc = plague_secrets.0511.dead.desc
		}
	}
	theme = secret
	
	left_portrait = scope:plaguer
	right_portrait = scope:victim
	
	option = {
		name = {
			trigger = { scope:plaguer = { is_alive = yes } }
			text = plague_secrets.0510.a.alive
		}
		name = {
			trigger = { scope:plaguer = { is_alive = no } }
			text = plague_secrets.0510.a.dead
		}
	}
}

#Someone murdered close family/spouse
plague_secrets.0512 = { #by Mathilda Bjarnehed and Linnéa Thimrén
	type = character_event
	title = plague_secrets.0510.t
	desc = {
		desc = plague_secrets.0512.regular.desc
		triggered_desc = { #Someone you care about was immured (you found out after a siege)
		    trigger = {
				exists = var:immured_relation
				var:immured_relation = scope:victim
		    }
		    desc = plague_secrets.0512.immured.desc
		}
		first_valid = {
			triggered_desc = {
				trigger = { scope:plaguer = { is_alive = yes } }
				desc = plague_secrets.0512.alive.desc
			}
			desc = plague_secrets.0512.dead.desc
		}
	}
	theme = secret
	
	left_portrait = scope:plaguer
	right_portrait = scope:victim
	
	option = {
		name = {
			trigger = { scope:plaguer = { is_alive = yes } }
			text = plague_secrets.0510.a.alive
		}
		name = {
			trigger = { scope:plaguer = { is_alive = no } }
			text = plague_secrets.0510.a.dead
		}
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
	}
}