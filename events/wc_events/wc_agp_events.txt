namespace = agp_event

agp_event.1 = { # If we start playing as lowborn theocratic or republican ruler
	type = character_event
	hidden = yes
	
	trigger = {
		is_ai = no
		has_dynasty = no
	}
	
	immediate = {	
		create_character = {
			employer = root
			age = { 92 98 }
			gender = male
			random_traits = yes
			save_scope_as = char
			dynasty = generate
		}
		scope:char = {
			set_age = { value = root.age add = 20 }
			death = natural
			if = {
				limit = {
					root = { has_race_trait_trigger = yes }
				}
				copy_race_effect = { CHARACTER = root }
			}
			else = { try_to_set_race_effect = yes }
		}
		set_father = scope:char
		set_house = scope:char.house
	}
}

agp_event.4 = {
	type = character_event
	hidden = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:that_faith
				}
				scope:that_faith = {
					remove_doctrine = doctrine_theocracy_lay_clergy add_doctrine = doctrine_theocracy_temporal
					remove_doctrine = doctrine_no_head add_doctrine = doctrine_spiritual_head
					every_in_list = {
						variable = theocrat_rulers
						if = {
							limit = {
								is_alive = yes
								is_ruler = yes
							}
							change_government = theocracy_government
						}
						scope:that_faith = {
							remove_list_variable = { name = theocrat_rulers target = prev }
						}
					}
				}
			}
			if = {
				limit = {
					has_character_flag = temp_rep_gov
				}
				change_government = republic_government
			}
			else_if = {
				limit = {
					has_character_flag = temp_theoc_gov
				}
				change_government = theocracy_government
			}

			if = {
				limit = {
					has_character_flag = temp_law_city
				}
				add_realm_law_skip_effects = city_succession_law
			}
			else_if = {
				limit = {
					has_character_flag = temp_law_bish
				}
				add_realm_law_skip_effects = bishop_theocratic_succession_law
			}

			set_house = scope:house_of_newchar
			#mercilessly kill off the unneeded character
			scope:char = { set_to_lowborn = yes death = natural }
			if = {
				limit = {
					any_in_list = {
						list = root_titles
						NOT = { holder = root }
					}
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				every_in_list = {
					list = root_titles
					limit = { NOT = { holder = root } tier >= tier_county }
					change_title_holder_include_vassals = {
						holder = root
						change = scope:title_change
					}
				}
				resolve_title_and_vassal_change = scope:title_change
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change2
					add_claim_on_loss = no
				}
				every_in_list = {
					list = root_titles
					limit = { NOT = { holder = root } tier = tier_barony }
					change_title_holder_include_vassals = {
						holder = root
						change = scope:title_change2
					}
				}
				resolve_title_and_vassal_change = scope:title_change2
			}
			if = {
				limit = { exists = scope:heir_titles_exist }
				if = {
					limit = { OR = { NOT = { exists = scope:new_ruler_of_heir_titles } scope:new_ruler_of_heir_titles = { is_alive = no } } }
					create_character = {
						employer = root
						template = agp_heir_character
						save_scope_as = new_ruler_of_heir_titles
					}
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change3
					add_claim_on_loss = no
				}
				every_in_list = {
					list = heir_titles
					change_title_holder_include_vassals = {
						holder = scope:new_ruler_of_heir_titles
						change = scope:title_change3
					}
				}
				resolve_title_and_vassal_change = scope:title_change3
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = swear_fealty
					add_claim_on_loss = no
				}
				every_in_list = {
					list = heir_vassals
					limit = { is_ruler = yes highest_held_title_tier >= tier_county NOT = { is_vassal_of = scope:new_ruler_of_heir_titles } }
					change_liege = {
						liege = scope:new_ruler_of_heir_titles
						change = scope:swear_fealty
					}
				}
				resolve_title_and_vassal_change = scope:swear_fealty
			}
		}
	}
}