# Forget a profession when above the soft-cap.
# Copied from language_events.0001 
profession_events.0001 = {
	type = character_event
	title = profession_events.0001.t # Create
	desc = profession_events.0001.desc # Create
	theme = learning
	left_portrait = {
		character = root
		animation = boredom
	}
	
	# Update
	trigger = {
		num_of_known_languages > language_soft_cap
		any_culture_global = {
			save_temporary_scope_as = culture_check
			root = {
				knows_language_of_culture = scope:culture_check
				culture = {
					NOT = {
						has_same_culture_language = scope:culture_check
					}
				}
			}
		}
	}
	
	# Update
	cooldown = {
		years = 3
	}

	# Update
	weight_multiplier = {
		base = 1
		modifier = {
			num_of_known_languages > language_soft_cap
			add = language_soft_cap_modifier_value
		}
	}

	# Update
	immediate = {
		random_culture_global = {
			limit = {
				save_temporary_scope_as = culture_check
				root = {
					knows_language_of_culture = scope:culture_check
					culture = {
						NOT = {
							has_same_culture_language = scope:culture_check
						}
					}
				}
			}
			weight = {
				base = 1
				modifier = {
					add = 9
					root.culture = {
						NOT = {
							has_same_culture_heritage = prev
						}
					}
				}
			}
			save_scope_as = language_to_forget
		}
	}

	# Update
	option = {
		name = language_events.0001.a
			
		unlearn_language_of_culture = scope:language_to_forget
		
		stress_impact = {
			lazy = major_stress_impact_loss
			diligent = medium_stress_impact_gain
			ambitious = medium_stress_impact_gain
		}
		
		ai_chance = {
			base = 100
		}
	}

	# Update
	option = {
		name = language_events.0001.b
		
		stress_impact = {
			base = massive_stress_impact_gain
			lazy = massive_stress_impact_gain
		}

		ai_chance = {
			base = 100
		}
	}
}