namespace = WCRAC

# Sets race not looking at genes
WCRAC.10 = {
	type = character_event
	hidden = yes
	
	trigger = {
		NOT = { has_character_flag = race_giving_fired_flag }
		
		has_race_trait_trigger = no
	}
	
	immediate = {
		copy_race_effect = { CHARACTER = this }
		
		if = {
			limit = {
				NOT = { has_character_flag = race_giving_fired_flag }
			
				has_race_trait_trigger = no
			}
		
			try_to_set_race_effect = { FLAG = no_gene }
			if = {
				limit = { game_start_undead_trigger = yes }
				become_undead_no_notification_effect = yes
			}
			scale_age_effect = yes
		}
	}
}

# Sets race looking at genes
WCRAC.20 = {
	type = character_event
	hidden = yes
	
	trigger = {
		NOT = { has_character_flag = race_giving_fired_flag }
		
		has_race_trait_trigger = no
	}
	
	immediate = {
		copy_race_effect = { CHARACTER = this }
		
		if = {
			limit = {
				NOT = { has_character_flag = race_giving_fired_flag }
			
				has_race_trait_trigger = no
			}
		
			try_to_set_race_effect = { FLAG = gene }
			if = {
				limit = { game_start_undead_trigger = yes }
				become_undead_no_notification_effect = yes
			}
			scale_age_effect = yes
		}
	}
}

# Sets race on game start
WCRAC.30 = {
	type = character_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				NOT = { has_character_flag = race_giving_fired_flag }
			
				has_race_trait_trigger = no
			}
			#Tries to set race flag based on trait you have
			copy_race_effect = { CHARACTER = this }
			trigger_event = WCRAC.20
		}
		# At the game start life expectancy is ignored
		if = {
			limit = {
				game_start_day_trigger = yes
				age <= age_50_value
				age > 50
			}
			add_character_modifier = game_start_health
		}
		# Old characters become impotent
		if = {
			limit = { can_be_impotent_trigger = yes }
			add_trait = impotent
		}
		# Give perks to characters
		add_perks_in_physical_lifestyle_effect = yes
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = light_magic }
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = shadow_magic }
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = disorder_magic }
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = order_magic }
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = life_magic }
		add_perks_in_nonelemental_TYPE_lifestyle_effect = { TYPE = death_magic }
		add_perks_in_elemental_MAGIC_lifestyle_effect = { MAGIC = elemental_fire }
		add_perks_in_elemental_MAGIC_lifestyle_effect = { MAGIC = elemental_water }
		add_perks_in_elemental_MAGIC_lifestyle_effect = { MAGIC = elemental_air }
		add_perks_in_elemental_MAGIC_lifestyle_effect = { MAGIC = elemental_earth }
	}
}