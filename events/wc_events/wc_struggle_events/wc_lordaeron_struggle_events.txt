namespace = lordaeron_struggle

lordaeron_struggle.0501 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = lordaeron_struggle.0501.t
	desc = {
		desc = lordaeron_struggle.0501.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = lordaeron_struggle
					}
				}
				desc = lordaeron_struggle.0501.desc.involved
			}
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = lordaeron_struggle
					}
				}
				desc = lordaeron_struggle.0501.desc.interloper
			}
		}
	}
	theme = realm
	trigger = { # we need to prevent this from firing for all players when a new player joins in MP
		is_ai = no
		NOT = { has_character_flag = lordaeron_struggle_intro_event_flag }
		wc_character_any_involvement_lordaeron_struggle_trigger = yes
 	}
	override_background = { reference = fp2_fullscreen_intro }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
 			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:lordaeron_struggle = { save_scope_as = struggle } }
		}
	}
	immediate = {
		play_music_cue = "mx_Struggle_Opening"
		add_character_flag = lordaeron_struggle_intro_event_flag
		save_scope_value_as = {
			name = start
			value = yes
		}
	}
	option = {
		name = lordaeron_struggle.0501.a
		clicksound = "event:/DLC/FP2/SFX/UI/fp2_struggle_start_select"
	}
}

# Setting AI Intent
fp2_struggle.0003 = {
	hidden = yes
	scope = none
	scope = struggle

	trigger = { # Should not need this, but, redundancy check!
		exists = struggle:lordaeron_struggle
		struggle:lordaeron_struggle = { any_involved_ruler = { count > 0 } } # For when the conflict is ongoing but nobody is left to fight it
	}

	immediate = {
		# prepare needed variables; they will be destroyed at the end of the immediate
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		# Go through the characters to distribute them between the potential transitions
		struggle:lordaeron_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				#######################
				# Play cue track
				######################
				if = {
					limit = { is_ai = no }
					play_music_cue = "mx_Struggle_Opening"
				}

				#######################
				# Check existing flags
				######################
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
				else = { # Set a flag
					#############################
					# Current Phase: Opportunity
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_opportunity } }
						random_list = {
							# Working towards Hostility
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Hostility
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_hostility } }
						random_list = {
							# Working towards Hostility: it means that the character wants to stay in
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Compromise
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_compromise } }
						random_list = {

							# Working towards Opportunity
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = opportunity
									INTENT = escalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise: they want to stay in the same phase
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Conciliation
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_conciliation } }
						random_list = {
							# Working towards Compromise
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = escalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation: they want to stay in the same phase
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

# Set AI Intent on join
fp2_struggle.004 = {
	hidden = yes
	scope = none

	immediate = {
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		############################
		# Update the variables
		############################
		every_character_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
			}
		}

		if = {
			limit = {
				NOR = {
					has_character_flag = agenda_towards_escalation
					has_character_flag = agenda_towards_deescalation
				}
			}

			#############################
			# Current Phase: Opportunity
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_opportunity } }
				random_list = {
					# Working towards Hostility
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Hostility
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_hostility } }
				random_list = {
					# Working towards Hostility: it means that the character wants to stay in
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Compromise
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_compromise } }
				random_list = {

					# Working towards Opportunity
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = opportunity
							INTENT = escalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise: they want to stay in the same phase
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Conciliation
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_conciliation } }
				random_list = {
					# Working towards Compromise
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = escalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation: they want to stay in the same phase
					100 = {
						# Odds modifiers
						fp2_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						fp2_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

neutral_struggle.0001 = {
	hidden = yes
	scope = struggle

	immediate = {
		# Activate the catalyst.
		activate_struggle_catalyst = catalyst_passing_of_time
		# Then queue the event up against for a year hence.
		trigger_event = {
			id = neutral_struggle.0001
			years = 1
		}
	}
}

wc_struggle.0900 = { # Hostility
	type = character_event
	window = fullscreen_event
	title = wc_struggle.0900.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = {
					culture = {
						OR = {
							this = culture:lordaeronian
							any_parent_culture = { this = culture:lordaeronian }
							has_cultural_pillar = language_common
						}
					}
		        }
		        desc = wc_struggle.0900.opening.lordaeronian
		    }
		    triggered_desc = {
		        trigger = {
					culture = {
						OR = {
							this = culture:forsaken
							any_parent_culture = { this = culture:forsaken }
							has_cultural_pillar = language_gutterspeak
						}
					}
		        }
		        desc = wc_struggle.0900.opening.forsaken
		    }
		    triggered_desc = {
		        trigger = {
					culture = { has_cultural_pillar = heritage_arathi }
		        }
		        desc = wc_struggle.0900.opening.arathi
		    }
		    desc = wc_struggle.0900.opening
		}
		desc = wc_struggle.0900.desc
	}
	theme = court
	override_background = { reference = fp2_fullscreen_hostility }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		# Add all involved rulers to a list, for ping event
		play_music_cue = "mx_Struggle_ending_hostility"
		wc_stuggle_ending_involved_list_effect = yes
		give_nickname = nick_the_conquistador
		dynasty = { add_dynasty_prestige = 10000 }
	}

	# Faith victory
	option = {
		name = wc_struggle.0900.a
		if = {
			limit = { exists = house }
			house = {
				add_house_modifier = {
					modifier = fp2_struggle_hostility_house_faith_modifier
				}
			}
		}
		# Piety reward for faith victory
		add_piety = 1000
		custom_description_no_bullet = { text = fp2_struggle_house_tt }
		custom_tooltip = fp2_struggle_hostility_holy_cb_tt
		custom_tooltip = fp2_struggle_hostility_conversion_holy_tt
		stress_impact = {
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	# Culture victory
	option = {
		name = wc_struggle.0900.b
		# Renown reward for culture victory
		if = {
			limit = { exists = house }
			dynasty = { add_dynasty_prestige = 1000 }
			house = {
				add_house_modifier = {
					modifier = fp2_struggle_hostility_house_culture_modifier
				}
			}
		}
		custom_description_no_bullet = { text = fp2_struggle_house_tt }
		custom_tooltip = fp2_struggle_hostility_culture_cb_tt
		custom_tooltip = fp2_struggle_hostility_conversion_culture_tt
		# All Involved cultures lose acceptance of each other
		custom_tooltip = {
			text = fp2_struggle_hostility_culture_tt
			wc_struggle_hostility_cultural_acceptance_effect = yes
		}
		stress_impact = {
			humble = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}

	# Combined victory
	option = {
		name = wc_struggle.0900.c
		# Reduced renown and piety rewards for combined
		if = {
			limit = { exists = house }
			house = {
				add_house_modifier = {
					modifier = fp2_struggle_hostility_house_combined_modifier
					years = 200
				}
			}
		}
		add_prestige = 3000
		custom_description_no_bullet = { text = fp2_struggle_house_tt }
		custom_tooltip = fp2_struggle_hostility_holy_cb_tt
		custom_tooltip = culture_parameter_cb_lower_piety_level_requirement
		custom_tooltip = fp2_struggle_hostility_culture_cb_tt
		custom_tooltip = fp2_struggle_hostility_conversion_holy_tt
		custom_tooltip = fp2_struggle_hostility_conversion_culture_tt
		# All Involved cultures lose acceptance of each other
		custom_tooltip = {
			text = fp2_struggle_hostility_culture_large_tt 
			wc_struggle_hostility_cultural_acceptance_large_effect = yes
		}
		stress_impact = {
			humble = medium_stress_impact_gain
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 2
				ai_boldness = 1
			}
		}
	}

	after = {
		# Notify & End Struggle
		save_scope_as = fp2_loc_struggle_ender # Loc used to use root, this fixes it
		every_player = {
			limit = { fp2_does_this_player_care_about_the_fate_of_iberia = yes } # Needs to be checked before the struggle ends due to race condition issues
			add_to_list = player_to_notify # Making a list so stuff is tiggered after the struggle ends, to make extra sure I don't break anything.
		}

		struggle:lordaeron_struggle = { end_struggle = struggle_lordaeron_ending_hostility_decision }
		every_in_list = { # Then we *actually* notify palyers, making sure the struggle has already ended
			list = player_to_notify
			trigger_event = fp2_struggle.0910
		}
	}
}