namespace = lordaeron_struggle

### SYSTEM EVENTS #################################################################
## # Parameter Events
## 0001 - 0010	VIP spontaneous relationship management.
## 0011 - 0040	Struggle VIPs spontaneously develop negative relationships with each other.
## 0041 - 0070	Struggle VIPs spontaneously develop postive relationships with each other.
## # Other Events
## 0501 - 0510	Struggle Intro Events
## 0900 - 0999	Struggle ending decision events
### EVENT LIST ####################################################################
## XXXX	- XXXX	YYY by ZZZ
###################################################################################

#Setting AI Intent
lordaeron_struggle.0003 = {
	hidden = yes
	scope = none
	scope = struggle

	trigger = { # Should not need this, but, redundancy check!
		exists = struggle:lordaeron_struggle
		struggle:lordaeron_struggle = { any_involved_ruler = { count > 0 } } # For when the conflict is ongoing but nobody is left to fight it
	}

	immediate = {
		# prepare needed variables; they will be destroyed at the end of the immediate
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value =  0
		}

		# Go through the characters to distribute them between the potential transitions
		struggle:lordaeron_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				
				# Play music cue
				if = {
					limit = { is_ai = no }
					play_music_cue = "mx_Struggle_Opening" 	# TODO maybe update music with more warcraftish stuff
				} 

				# Check existing flags
				if = {
					limit = { has_character_flag = agend_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = {has_character_flag = agend_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
				# If no flag is set, then set a flag
				else = {
					# Current Phase: Opportunity
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_opportunity } }
						random_list = {
							# Working towards Hostility
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}
								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
					# Current Phase: Hostility
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_hostility } }
						random_list = {
							# Working towards Hostility: it means that the character wants to stay in
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
					# Current Phase Compromise
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_compromise } }
						random_list = {

							# Working towards Opportunity
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = opportunity
									INTENT = escalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise: they want to stay in the same phase
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
					# Current Phase: Conciliation
					if = {
						limit = { root = { is_struggle_phase = struggle_lordaeron_phase_conciliation } }
						random_list = {
							# Working towards Compromise
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = escalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation: they want to stay in the same phase
							100 = {
								# Odds modifiers
								wc_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}

								# Apply effects
								wc_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agend_towards_deescalation
	}
}

# Set AI Intent on join
lordaeron_struggle.0004 = {
	hidden = yes
	scope = none

	immediate = {
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}
		# Update variables
		every_character_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				if = {
					limit = { has_character_flag = agend_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
			}
		}
		if = {
			limit = {
				NOR = {
					has_character_flag = agend_towards_escalation
					has_character_flag = agend_towards_deescalation
				}
			}
			# Current Phase: Opportunity
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_opportunity } }
				random_list = {
					# Working towards Hostility
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
			# Current Phase: Hostility
			if = {
				limit = { any_character_struggle = { is_struggle_phase = hosti } }
				random_list = {
					# Working towards Hostility: it means that the character wants to stay in
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
			# Current Phase: Compromise
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_compromise } }
				random_list = {
					# Working towards Opportunity
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = opportunity
							INTENT = escalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise: they want to stay in the same phase
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
			# Current Phase: Conciliation
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_lordaeron_phase_conciliation } }
				random_list = {
					# Working towards Compromise
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = escalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation: they want to stay in the same phase
					100 = {
						# Odds modifiers
						wc_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						wc_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
		}
		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

# Lordaeron Struggle Intro Event
lordaeron_struggle.0501 = {
	type = character_event
	window = fullscreen_event
	title = lordaeron_struggle.0501.t # TODO implement
	desc = {
		desc = lordaeron_struggle_0501.desc # TODO implement
		first_valid = {
			# Involved Description
			triggered_desc = {
				any_character_struggle = {
					involvement = involved
					is_struggle_type = lordaeron_struggle
				}
				desc = lordaeron_struggle.0501.desc.involved # TODO implement
			}
			# Interloper Description
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = lordaeron_struggle
					}
				}
				desc = lordaeron_struggle.0501.desc.interloper # TODO implement
			}
		}
	}
	theme = realm # TODO what other themes are there? How do they look like?
	# we need to prevent this from firing for all players when a new player joins in MP
	trigger = {
		is_ai = no
		NOT = { has_character_flag = wc_struggle_intro_event_flag }
		wc_character_any_involvement_lordaeron_struggle_trigger = yes
	}
	override_background = { reference = wc_lordaeron_struggle_fullscreen_intro }
	# TODO maybe update this?
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:lordaeron_struggle = { save_scope_as = struggle } }
		}
	}

	immediate = {
		play_music_cue = "mx_Struggle_Opening"
		add_character_flag = wc_lordaeron_struggle_intro_event_flag
		save_scope_value_as = {
			name = start
			value = yes
		}
	}
	option = {
		name = wc_lordaeron_struggle.0501.a
		clicksound = "event:/DLC/FP2/SFX/UI/fp2_struggle_start_select"
	}
}