window = {
	name = "widget_spellbook"
	position = { 0 20 }
	parentanchor = center
	allow_outside = yes
	layer = middle

	visible = "[GetVariableSystem.HasValue( 'spellbook_window', 'yes' )]"

	size = { 1060 900 }
	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		on_start = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
		on_start = "[GetScriptedGui( 'open_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		on_start = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	vbox = {
		using = Window_Margins
		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "SPELLBOOK_HEADER_TEXT"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Clear( 'spellbook_window' )]"
			}
		}

		vbox = {
			margin = { 0 10 }
			spacing = 10
			hbox = {
				spacing = 10
				layoutpolicy_horizontal = expanding				

				hbox = {
					layoutpolicy_horizontal = fixed				
					spacing = 10
					name = "magic_school_buttons"

					widget = {
						name = "magic_school_spells"
						size = { 100 500 }
						scrollbox = {					
							size = { 100 500 }
							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_content"
							{
								dynamicgridbox = {
									datamodel = "[GetPlayer.MakeScope.GetList( 'spell_types' )]"
									item = {
										button_tab_vertical = {
											size = { 70 70 }
											icon = {
												parentanchor = center
												size = { 45 45 }
												texture = "[GetCultureInnovationType(Concatenate(Scope.GetFlagName, '_magic')).GetIcon]"
												tooltip = "[Localize(Concatenate('game_concept_wc_spell_school_', Scope.GetFlagName))]"
											}
											onclick = "[GetScriptedGui( 'clear_selected_spell_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											onclick = "[GetScriptedGui( 'set_current_spell_class_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'class', MakeScopeFlag(Scope.GetFlagName)).End))]"
											down = "[GetVariableSystem.HasValue( 'current_magic_selected', Scope.GetFlagName )]"
											onclick = "[GetVariableSystem.Set( 'current_magic_selected', Scope.GetFlagName )]"
										}
									}
								}
							}
						}
						
						background = {
							using = Background_Area
						}
					}

					widget = {
						name = "spell_select"
						size = { 600 500 }
						background = {
							using = Background_Area
						}
						
						text_single = {
							text = DEFAULT_TEXT
							fontsize = 20
							parentanchor = center
							visible = "[Not(GetVariableSystem.Exists( 'current_magic_selected' ))]"
						}

						scrollbox = {
							visible = "[GetVariableSystem.Exists( 'current_magic_selected' )]"
							size = { 600 500 }
							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_content" = {
								dynamicgridbox = {
									datamodel = "[GetGlobalList(Concatenate(GetVariableSystem.Get('current_magic_selected'), '_spells'))]"
									item = {
										button_standard = {
											size = { 500 75 }
											buttonText = {
												text_single = {
													size = { 20 20 }
													using = Font_Size_Big
													parentanchor = center
													position = { 0 -5 }
													text = "[Localize(Concatenate(Concatenate(Concatenate('game_concept_wc_spell_', GetVariableSystem.Get('current_magic_selected')), '_'), Scope.GetFlagName))))]"
												}
											}
											down = "[GetScriptedGui( 'is_spell_selected_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End))]"
											onclick = "[GetScriptedGui( 'set_current_spell_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End))]"
											# enabled = is spell known
											tooltipwidget = {
												# visible = is spell known
												widget_spell_breakdown_tooltip = {
													datacontext = "[MakeScopeFlag(Concatenate(Concatenate(Concatenate('game_concept_wc_spell_', GetVariableSystem.Get('current_magic_selected')), '_'), Scope.GetFlagName))))]"
												}
											}
										}
										
									}
								}
							}
						}
					}

					widget = {
						name = "target_selection"
						size = { 250 500 }
						text_single = {
							parentanchor = center
							text = "DEFAULT_TEXT"
						}
						background = {
							using = Background_Area
						}
					}
				}

				hbox = {
					name = "effects_box"
					layoutpolicy_horizontal = expanding

					vbox = {
						name = "effects_on_target"
						datacontext = "[GetPlayer.MakeScope.Char]"
						layoutpolicy_horizontal = expanding
						margin_bottom = 5

						background = {
							using = Background_Area_With_Header
						}

						text_single = {
							text = "EFFECTS_ON_ME"
							layoutpolicy_horizontal = expanding
							margin = { 15 4 }
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 5
							spacing = 5
							margin_left = 6
							margin_bottom = 50

							portrait_head = {
								blockoverride "opinion_box"
								{}
							}

							text_multi = {
								name = "effects_info"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								autoresize = yes
								min_width = 350
								margin = { 5 10 }
								text = "DEFAULT_TEXT"
							}

							expand = {}
						}
					}

					vbox = {
						name = "effects_on_targets"
						datacontext = "[GetPlayer.MakeScope.Char]"
						layoutpolicy_horizontal = expanding
						margin_bottom = 5
						visible = "[Not(ObjectsEqual(GetPlayer.MakeScope.Char, GetPlayer.MakeScope.Var( 'spell_recipient' ).Char))]"
						background = {
							using = Background_Area_With_Header
						}

						text_single = {
							text = "EFFECTS_ON_ME"
							layoutpolicy_horizontal = expanding
							margin = { 15 4 }
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 5
							spacing = 5
							margin_left = 10
							margin_right = 6
							margin_bottom = 50
							text_multi = {
								name = "effects_info"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								autoresize = yes
								min_width = 350
								margin = { 5 10 }
								text = "DEFAULT_TEXT"
							}

							expand = {}

							portrait_head = {
								blockoverride "opinion_box" {}
								blockoverride "portrait_transformation"
								{
									portrait_scale = { -1 1 }
									portrait_offset = { 1 0 }
								}
							}
						}
					}
				}
			}

			button_primary = {
				size = { 225 50 }
				text = "CAST_SPELL_TEXT"
			}
		
			expand = {}
		}
	}
}

types SpellbookTypes 
{
	type button_magic_school = button_tab_vertical {
		size = { 70 70 }
		
		block "school_icon"
		{
			icon = {
				size = { 45 45 }
				texture = "gfx/interface/icons/icon_light_magic.dds"
				parentanchor = center
			}
		}

		block "school_tooltip"
		{
			tooltip = game_concept_wc_spell_school_light
		}
	}
}